<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0208.0337                               -->
<workbook original-version='18.1' source-build='2024.1.0 (20241.24.0208.0337)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='supermarket_sales - Sheet1' inline='true' name='federated.1xptqkj1ymnatx11pkvot1wnm4ya' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='supermarket_sales - Sheet1' name='textscan.13o9s8z0jwb7w31bk9zqn08np3o3'>
            <connection class='textscan' directory='C:/Users/BB RAO/Downloads' filename='supermarket_sales - Sheet1.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.13o9s8z0jwb7w31bk9zqn08np3o3' name='supermarket_sales - Sheet1.csv' table='[supermarket_sales - Sheet1#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Invoice ID' ordinal='0' />
            <column datatype='string' name='Branch' ordinal='1' />
            <column datatype='string' name='City' ordinal='2' />
            <column datatype='string' name='Customer type' ordinal='3' />
            <column datatype='string' name='Gender' ordinal='4' />
            <column datatype='string' name='Product line' ordinal='5' />
            <column datatype='real' name='Unit price' ordinal='6' />
            <column datatype='integer' name='Quantity' ordinal='7' />
            <column datatype='real' name='Tax 5%' ordinal='8' />
            <column datatype='real' name='Total' ordinal='9' />
            <column datatype='date' name='Date' ordinal='10' />
            <column datatype='datetime' name='Time' ordinal='11' />
            <column datatype='string' name='Payment' ordinal='12' />
            <column datatype='real' name='cogs' ordinal='13' />
            <column datatype='real' name='gross margin percentage' ordinal='14' />
            <column datatype='real' name='gross income' ordinal='15' />
            <column datatype='real' name='Rating' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.13o9s8z0jwb7w31bk9zqn08np3o3' name='supermarket_sales - Sheet1.csv' table='[supermarket_sales - Sheet1#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Invoice ID' ordinal='0' />
            <column datatype='string' name='Branch' ordinal='1' />
            <column datatype='string' name='City' ordinal='2' />
            <column datatype='string' name='Customer type' ordinal='3' />
            <column datatype='string' name='Gender' ordinal='4' />
            <column datatype='string' name='Product line' ordinal='5' />
            <column datatype='real' name='Unit price' ordinal='6' />
            <column datatype='integer' name='Quantity' ordinal='7' />
            <column datatype='real' name='Tax 5%' ordinal='8' />
            <column datatype='real' name='Total' ordinal='9' />
            <column datatype='date' name='Date' ordinal='10' />
            <column datatype='datetime' name='Time' ordinal='11' />
            <column datatype='string' name='Payment' ordinal='12' />
            <column datatype='real' name='cogs' ordinal='13' />
            <column datatype='real' name='gross margin percentage' ordinal='14' />
            <column datatype='real' name='gross income' ordinal='15' />
            <column datatype='real' name='Rating' ordinal='16' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[supermarket_sales - Sheet1.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Invoice ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Invoice ID]</local-name>
            <parent-name>[supermarket_sales - Sheet1.csv]</parent-name>
            <remote-alias>Invoice ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[supermarket_sales - Sheet1.csv_18EEF45BEA454AC09930B0DAE6E6A84E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Branch</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Branch]</local-name>
            <parent-name>[supermarket_sales - Sheet1.csv]</parent-name>
            <remote-alias>Branch</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[supermarket_sales - Sheet1.csv_18EEF45BEA454AC09930B0DAE6E6A84E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[supermarket_sales - Sheet1.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[supermarket_sales - Sheet1.csv_18EEF45BEA454AC09930B0DAE6E6A84E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer type]</local-name>
            <parent-name>[supermarket_sales - Sheet1.csv]</parent-name>
            <remote-alias>Customer type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[supermarket_sales - Sheet1.csv_18EEF45BEA454AC09930B0DAE6E6A84E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[supermarket_sales - Sheet1.csv]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[supermarket_sales - Sheet1.csv_18EEF45BEA454AC09930B0DAE6E6A84E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product line</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product line]</local-name>
            <parent-name>[supermarket_sales - Sheet1.csv]</parent-name>
            <remote-alias>Product line</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[supermarket_sales - Sheet1.csv_18EEF45BEA454AC09930B0DAE6E6A84E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unit price]</local-name>
            <parent-name>[supermarket_sales - Sheet1.csv]</parent-name>
            <remote-alias>Unit price</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[supermarket_sales - Sheet1.csv_18EEF45BEA454AC09930B0DAE6E6A84E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[supermarket_sales - Sheet1.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[supermarket_sales - Sheet1.csv_18EEF45BEA454AC09930B0DAE6E6A84E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tax 5%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tax 5%]</local-name>
            <parent-name>[supermarket_sales - Sheet1.csv]</parent-name>
            <remote-alias>Tax 5%</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[supermarket_sales - Sheet1.csv_18EEF45BEA454AC09930B0DAE6E6A84E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total]</local-name>
            <parent-name>[supermarket_sales - Sheet1.csv]</parent-name>
            <remote-alias>Total</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[supermarket_sales - Sheet1.csv_18EEF45BEA454AC09930B0DAE6E6A84E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[supermarket_sales - Sheet1.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>10</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[supermarket_sales - Sheet1.csv_18EEF45BEA454AC09930B0DAE6E6A84E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[supermarket_sales - Sheet1.csv]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>11</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[supermarket_sales - Sheet1.csv_18EEF45BEA454AC09930B0DAE6E6A84E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Payment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Payment]</local-name>
            <parent-name>[supermarket_sales - Sheet1.csv]</parent-name>
            <remote-alias>Payment</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[supermarket_sales - Sheet1.csv_18EEF45BEA454AC09930B0DAE6E6A84E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cogs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cogs]</local-name>
            <parent-name>[supermarket_sales - Sheet1.csv]</parent-name>
            <remote-alias>cogs</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[supermarket_sales - Sheet1.csv_18EEF45BEA454AC09930B0DAE6E6A84E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gross margin percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gross margin percentage]</local-name>
            <parent-name>[supermarket_sales - Sheet1.csv]</parent-name>
            <remote-alias>gross margin percentage</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[supermarket_sales - Sheet1.csv_18EEF45BEA454AC09930B0DAE6E6A84E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gross income</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gross income]</local-name>
            <parent-name>[supermarket_sales - Sheet1.csv]</parent-name>
            <remote-alias>gross income</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[supermarket_sales - Sheet1.csv_18EEF45BEA454AC09930B0DAE6E6A84E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rating]</local-name>
            <parent-name>[supermarket_sales - Sheet1.csv]</parent-name>
            <remote-alias>Rating</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[supermarket_sales - Sheet1.csv_18EEF45BEA454AC09930B0DAE6E6A84E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column aggregation='Hour' datatype='datetime' name='[Time]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='supermarket_sales - Sheet1.csv' datatype='table' name='[__tableau_internal_object_id__].[supermarket_sales - Sheet1.csv_18EEF45BEA454AC09930B0DAE6E6A84E]' role='measure' type='quantitative' />
      <column caption='Cogs' datatype='real' name='[cogs]' role='measure' type='quantitative' />
      <column caption='Gross Income' datatype='real' name='[gross income]' role='measure' type='quantitative' />
      <column caption='Gross Margin Percentage' datatype='real' name='[gross margin percentage]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='supermarket_sales - Sheet1.csv' id='supermarket_sales - Sheet1.csv_18EEF45BEA454AC09930B0DAE6E6A84E'>
            <properties context=''>
              <relation connection='textscan.13o9s8z0jwb7w31bk9zqn08np3o3' name='supermarket_sales - Sheet1.csv' table='[supermarket_sales - Sheet1#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Invoice ID' ordinal='0' />
                  <column datatype='string' name='Branch' ordinal='1' />
                  <column datatype='string' name='City' ordinal='2' />
                  <column datatype='string' name='Customer type' ordinal='3' />
                  <column datatype='string' name='Gender' ordinal='4' />
                  <column datatype='string' name='Product line' ordinal='5' />
                  <column datatype='real' name='Unit price' ordinal='6' />
                  <column datatype='integer' name='Quantity' ordinal='7' />
                  <column datatype='real' name='Tax 5%' ordinal='8' />
                  <column datatype='real' name='Total' ordinal='9' />
                  <column datatype='date' name='Date' ordinal='10' />
                  <column datatype='datetime' name='Time' ordinal='11' />
                  <column datatype='string' name='Payment' ordinal='12' />
                  <column datatype='real' name='cogs' ordinal='13' />
                  <column datatype='real' name='gross margin percentage' ordinal='14' />
                  <column datatype='real' name='gross income' ordinal='15' />
                  <column datatype='real' name='Rating' ordinal='16' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Superstore' inline='true' name='federated.0ua4wh50j1zsoh11m2rmw12g4t9f' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Superstore' name='textscan.07c7xfg0kear6j1f0dfhu0ughs4i'>
            <connection class='textscan' directory='C:/Users/BB RAO/Downloads' filename='Superstore.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.07c7xfg0kear6j1f0dfhu0ughs4i' name='Superstore.csv' table='[Superstore#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.07c7xfg0kear6j1f0dfhu0ughs4i' name='Superstore.csv' table='[Superstore#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Superstore.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;ibm-5348_P100-1997&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Superstore.csv]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore.csv_3CB1B4B30DA341F6B012BAEAA6B73580]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Superstore.csv]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore.csv_3CB1B4B30DA341F6B012BAEAA6B73580]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Superstore.csv]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore.csv_3CB1B4B30DA341F6B012BAEAA6B73580]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Superstore.csv]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore.csv_3CB1B4B30DA341F6B012BAEAA6B73580]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Superstore.csv]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore.csv_3CB1B4B30DA341F6B012BAEAA6B73580]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Superstore.csv]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore.csv_3CB1B4B30DA341F6B012BAEAA6B73580]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Superstore.csv]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore.csv_3CB1B4B30DA341F6B012BAEAA6B73580]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Superstore.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore.csv_3CB1B4B30DA341F6B012BAEAA6B73580]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Superstore.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore.csv_3CB1B4B30DA341F6B012BAEAA6B73580]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Superstore.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore.csv_3CB1B4B30DA341F6B012BAEAA6B73580]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Superstore.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore.csv_3CB1B4B30DA341F6B012BAEAA6B73580]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Superstore.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore.csv_3CB1B4B30DA341F6B012BAEAA6B73580]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Superstore.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore.csv_3CB1B4B30DA341F6B012BAEAA6B73580]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Superstore.csv]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore.csv_3CB1B4B30DA341F6B012BAEAA6B73580]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Superstore.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore.csv_3CB1B4B30DA341F6B012BAEAA6B73580]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Superstore.csv]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore.csv_3CB1B4B30DA341F6B012BAEAA6B73580]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Superstore.csv]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore.csv_3CB1B4B30DA341F6B012BAEAA6B73580]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Superstore.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore.csv_3CB1B4B30DA341F6B012BAEAA6B73580]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Superstore.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore.csv_3CB1B4B30DA341F6B012BAEAA6B73580]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Superstore.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore.csv_3CB1B4B30DA341F6B012BAEAA6B73580]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Superstore.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore.csv_3CB1B4B30DA341F6B012BAEAA6B73580]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Calculation1' datatype='real' name='[Calculation_440508400599019520]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Sales]' />
      </column>
      <column caption='Calculation2' datatype='real' name='[Calculation_440508400599629825]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Profit]' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Superstore.csv' datatype='table' name='[__tableau_internal_object_id__].[Superstore.csv_3CB1B4B30DA341F6B012BAEAA6B73580]' role='measure' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[diff:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Customer Name Set]' derivation='InOut' name='[io:Customer Name Set:nk]' pivot='key' type='nominal' />
      <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Profit]' derivation='Sum' name='[rank:sum:Profit:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Sub-Category:nk]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[rank:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
      <group caption='Set4' name='[Category Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='member' level='[Category]' member='%null%' />
        </groupfilter>
      </group>
      <group caption='set2' name='[Customer Name Set 2]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Customer Name]' member='&quot;Ben Ferrer&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Cassandra Brandow&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Chloris Kastensmidt&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Edward Hooks&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Emily Phan&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;John Lee&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Jonathan Doherty&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Paul Prost&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Steven Cartwright&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;William Brown&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Zuschuss Carroll&quot;' />
        </groupfilter>
      </group>
      <group caption=' Set1' name='[Customer Name Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Customer Name]' member='&quot;Barry Gonzalez&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Bart Pistole&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Chad McGuire&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Deborah Brumfield&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Jennifer Halladay&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Linda Cazamias&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Michael Moore&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Rob Dowd&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Steven Cartwright&quot;' />
          <groupfilter function='member' level='[Customer Name]' member='&quot;Thomas Thornton&quot;' />
        </groupfilter>
      </group>
      <group caption='set3' name='[Sub-Category Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Sub-Category]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[Sub-Category]' member='&quot;Accessories&quot;' />
            <groupfilter function='member' level='[Sub-Category]' member='&quot;Envelopes&quot;' />
            <groupfilter function='member' level='[Sub-Category]' member='&quot;Supplies&quot;' />
            <groupfilter function='member' level='[Sub-Category]' member='%null%' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Postal Code, set2'>
          <field>[Customer Name Set 2]</field>
          <field>[Postal Code]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Customer Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Adrian Shami&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Alyssa Tate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Annie Thurman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Barry Gonzalez&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bill Eplett&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brian Derr&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carlos Soltero&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chris Selesnick&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clay Cheatham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dan Campbell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;David Kendrick&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dianna Arnett&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Edward Becker&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Erin Creighton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fred Harton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greg Guthrie&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Henia Zydlo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Janet Martin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jesus Ocampo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;John Lucas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Justin Deggeller&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kean Nguyen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Larry Hughes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Liz Carlisle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maribeth Dona&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Matthew Grinstein&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Michael Oakman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monica Federle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nick Radford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Patrick O&apos;Brill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Philip Brown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Richard Eichhorn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Roland Murray&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sample Company A&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sean Wendt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stephanie Phelps&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suzanne McNair&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tim Brockman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tracy Poddar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Xylona Preis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aaron Bergman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alex Avila&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ann Chong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Arthur Prichep&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benjamin Farhat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bradley Nguyen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Candace McMahon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad Sievert&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chuck Clark&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Craig Reiter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Darrin Sayre&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denise Leinenbach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Doug Jacobs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eric Barreto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frank Atkinson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;George Bell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Harold Ryan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jack Lebron&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jennifer Halladay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Joe Kamberova&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jonathan Doherty&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Joy Smith&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Katharine Harms&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ken Heidel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Linda Cazamias&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lycoris Saunders&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MaryBeth Skach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Melanie Seite&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mike Caudle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nathan Gelder&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Olvera Toch&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pauline Webber&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Randy Bradley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rob Williams&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russell D&apos;Ascenzo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Scot Coram&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shui Tom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sue Ann Reed&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Theone Pippenger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tom Stivers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Victoria Brennan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adam Hart&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Allen Armold&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anna Gayman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Barbara Fisher&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beth Fritzler&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brendan Murry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carl Ludwig&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Charlotte Melton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cindy Schnelling&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cynthia Delaney&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dave Kipp&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dennis Pardue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Duane Noonan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Erica Hackney&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Frank Merwin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Giulietta Dortch&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Heather Kirkland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamie Frazer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jeremy Farry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;John Dryer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Juliana Krohn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Katherine Nockton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kristen Hastings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lindsay Williams&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marc Harrigan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Matt Collister&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Michael Granlund&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mike Vittorini&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Neil Knudson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Patricia Hirasaki&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pete Takahito&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Resi PÃ¶lking&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Robert Waldorf&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sally Knutson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sean Braxton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sonia Sunley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Steven Cartwright&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Susan Gilcrest&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thomas Brumley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tony Sayre&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vivek Grady&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Paul Prost&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alan Haines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Andrew Gjertsen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anthony Johnson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bart Pistole&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bill Tyler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brooke Gillingham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Caroline Jumper&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Christine Abelman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Corey Catlett&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Daniel Byrd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dean Braden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Don Jones&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eleni McCrary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eugene Barchas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gary Hansen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greg Tran&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hilary Holden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jason Gross&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jim Epp&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jonathan Howell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Justin Ritter&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Keith Herrera&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Laurel Elliston&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liz Thompson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maris LaWare&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maurice Satty&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Michelle Ellison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nancy Lomonaco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicole Hansen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paul Knutson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Phillip Breyer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rick Huthwaite&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ross DeVincentis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sanjit Engle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shahid Shariari&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Steve Nguyen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamara Manning&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Toby Gnade&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trudy Brown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zuschuss Donatelli&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aimee Bixby&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Amy Cox&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Annie Zypern&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Barry Pond&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bill Overfelt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brian Moss&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carol Adams&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Christina Anderson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clay Ludtke&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dan Lawera&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;David Philippe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dianna Vittorini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Erin Mull&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fred Hopkins&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greg Hansen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Henry Goldwyn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Janet Molinari&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jill Fjeld&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;John Murray&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Justin Ellison&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kean Takahito&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Larry Tron&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liz MacKendrick&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maribeth Schnelling&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maureen Fritzler&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Michael Paige&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Muhammed Lee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nick Zandusky&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Patrick O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philip Fox&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rick Bensley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Roland Schwarz&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sandra Flanagan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seth Vernon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stephanie Ulpright&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sylvia Foulston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tim Taslimi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tracy Zic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yana Sorensen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adam Shillingsburg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen Goldenen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anna HÃ¤berlin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barry Blumstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Beth Paige&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brendan Sweed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carl Weiss&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cindy Stewart&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cynthia Voltz&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dave Poirier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denny Blanton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ed Braxton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Erica Hernandez&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Frank Olsen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Giulietta Weimer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Helen Abelman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamie Kunitz&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jeremy Lonsdale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;John Grady&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Julie Creighton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Katrina Bavinger&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kristina Nunn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lisa DeCherney&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maria Bertelson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Matt Connell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Michael Kennedy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mitch Gastineau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Neola Schneider&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Patrick Bzostek&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peter BÃ¼hler&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ricardo Emerson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Roger Barcio&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sally Matthias&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sean Christensen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Speros Goranitis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Susan MacKendrick&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thomas Seio&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tracy Blumstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vivek Sundaresam&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Edward Hooks&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alejandro Savely&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Angele Hood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Art Foster&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ben Peterman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brad Thomas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bryan Mills&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chad Cunningham&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Christopher Schild&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Craig Leslie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Darren Powers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Deirdre Greer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dorris liebe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Emily Grady&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Evan Minnotte&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gene McClure&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Harold Engle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ivan Liston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jennifer Braxton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jocasta Rupert&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Joy Bell-&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Karen Seio&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ken Brennan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lena Hernandez&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luke Schmidt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mary O&apos;Rourke&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Meg O&apos;Connel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mick Crebagga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Natalie Webber&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nora Preis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pauline Chand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ralph Kennedy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rob Haberlin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ruben Dartt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sarah Foster&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shirley Jackson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Stuart Calhoun&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thea Hendricks&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tom Boeckenhauer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vicky Freymann&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aaron Hawkins&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alex Grayson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ann Steele&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arthur Wiediger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benjamin Patterson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bradley Talbott&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cari Sayre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charles Crestani&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chuck Magee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Craig Yedwab&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Darrin Van Huff&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Denise Monton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Doug O&apos;Connell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eric Hoffmann&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Frank Carlisle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;George Zrebassa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Harry Greene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jack O&apos;Briant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jennifer Jackson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Joel Eaton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Julia Barnett&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Katherine Ducich&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ken Lonsdale&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Linda Southworth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lynn Smith&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mathew Reese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Michael Chen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mike Gockenbach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nathan Mautz&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pamela Coakley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Penelope Sewall&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Randy Ferguson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Robert Barroso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ryan Akin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Scot Wooten&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sibella Parks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sung Chung&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Theresa Coyne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonja Turnell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Victoria Pisteka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alejandro Ballentine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Andy Yotov&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arianne Irving&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Becky Pak&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brad Eason&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bruce Stewart&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cassandra Brandow&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cathy Hwang&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Christopher Conant&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Craig Carreira&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Darren Budd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Deborah Brumfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dorothy Dickinson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Emily Burns&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Evan Bailliet&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gary Zandusky&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hallie Redmond&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Irene Maddox&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jay Kimmel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jim Radford&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Joseph Airdo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Karen Daniels&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kelly Williams&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lena Cacioppo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lori Olson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mark Packer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maxwell Schwartz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Michelle Tran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Natalie DeCherney&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nora Paige&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paul Stevenson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rachel Payne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rob Beeghly&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Roy Skaria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sarah Bern&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sheri Gordon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stewart Carmichael&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ted Trevino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Todd Sumrall&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Valerie Mitchum&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Adrian Barton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allen Rosenblatt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anne McFarland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Barry Franz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Beth Thompson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brian Dahlen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carlos Daly&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chris Cortes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Claire Gute&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cyra Reiten&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;David Bremer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denny Joy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ed Jacobs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Erica Smith&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Frank Preis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grace Kelly&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Helen Andreada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jane Waco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jeremy Pistek&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;John Huston&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Julie Kriz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Katrina Edelman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kunst Miller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lisa Hazard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maria Etezadi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Matt Hagelstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Michael Moore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mitch Webber&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Neoma Murray&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Patrick Gardner&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peter Fuller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ricardo Sperren&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Roger Demir&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sam Craven&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sean Miller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stefania Perrino&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Susan Pistek&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thomas Thornton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tracy Collins&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vivian Mathis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alan Hwang&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Andrew Roberts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anthony O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bart Watters&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bobby Elias&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brosina Hoffman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Christine Kargatis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Corey Roper&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daniel Lacy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dean Katz&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Don Miller&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Elizabeth Moffitt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eugene Hildebrand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gary Hwang&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guy Armstrong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hunter Glantz&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jason Klamczynski&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jim Karlsson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Joni Blumstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kalyca Meade&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kelly Andreada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Laurel Workman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liz Willingham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mark Cousins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Matt Abelman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Max Engle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Michelle Huthwaite&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Naresj Patel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noah Childs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paul Lucas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phillip Flathmann&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rick Reed&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Roy Collins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sanjit Jacobs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sharelle Roach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tamara Willingham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Toby Ritter&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trudy Glocke&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alan Schoenberger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Andy Gerbode&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Anthony Rawles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Becky Castell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bobby Odegard&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bruce Degenhardt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Catherine Glotzbach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Christine Phan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Corey-Lock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Daniel Raglin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dean percer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Don Weiss&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ellis Ballard&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eugene Moren&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gary McGarr&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guy Phonely&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hunter Lopez&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jasper Cacioppo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jim Kriz&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Joni Sundaresam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Karen Bern&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kelly Collister&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lauren Leatherbury&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Logan Currie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mark Haberlin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Max Jones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Michelle Lonsdale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nat Carroll&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Noel Staavos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Paul MacIntyre&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pierre Wener&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rick Wilson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roy FranzÃ¶sisch&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saphhira Shifley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shaun Chance&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Steven Roelle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tanja Norvell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Toby Swindell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trudy Schmidt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alejandro Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Anemone Ratner&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Art Ferguson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ben Ferrer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brad Norvell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bryan Davis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cathy Prescott&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Christopher Martinez&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Craig Carroll&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Darren Koutras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Debra Catini&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dorothy Wardle&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Emily Ducich&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Evan Henry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gene Hale&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harold Dahlen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ivan Gibson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jenna Caffey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jim Sink&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Joseph Holt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Karen Ferguson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ken Black&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lena Creighton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luke Foster&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mark Van Huff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maya Herman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mick Brown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Natalie Fritzler&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nora Pelletier&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paul Van Hugh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ralph Arnett&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rob Dowd&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ruben Ausman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sarah Brown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shirley Daniels&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stewart Visinsky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thais Sissman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tom Ashbrook&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Valerie Takahito&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aleksandra Gannaway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ann Blume&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Arthur Gainer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ben Wallace&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bradley Drucker&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bryan Spruell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad McGuire&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Christy Brittain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Craig Molinari&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Darrin Martin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Delfina Latchford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Doug Bickford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Filia McAdams&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;George Ashbrook&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Harold Pawlan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jack Garza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jennifer Ferguson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joe Elijah&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joy Daniels&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Karl Braun&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ken Dana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lena Radford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luke Weiss&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mary Zewe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Meg Tillman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mick Hernandez&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nathan Cano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Odella Nelson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pauline Johnson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ralph Ritter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rob Lucas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Russell Applegate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sarah Jordon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shirley Schmidt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Stuart Van&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thea Hudgings&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tom Prescott&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Victor Preis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alan Barnes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Amy Hunt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Anthony Garverick&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Barry Weirich&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bill Shonely&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brian Stugart&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carol Darley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Christina DeMoss&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clay Rozendal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dan Reichenbach&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;David Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dianna Wilson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Edward Nazzal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Erin Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fred McMath&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greg Matthias&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Henry MacAllister&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jas O&apos;Carroll&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jill Matthias&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;John Lee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;John Stevenson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Justin Hirsh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kean Thornton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laura Armstrong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liz Pelletier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maribeth Yedwab&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maureen Gastineau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Michael Stewart&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Muhammed MacIntyre&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nicole Brennan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Patrick Ryan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philisse Overcash&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rick Duston&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rose O&apos;Brian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sandra Glassco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shahid Collister&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Steve Carroll&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tamara Chand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Toby Braunhardt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Troy Blackwell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yoseph Carroll&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Emily Phan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adrian Hane&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alyssa Crouse&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anne Pryor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barry FranzÃ¶sisch&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bill Donatelli&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brian DeCherney&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carlos Meador&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chris McAfee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Claudia Bergmann&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Damala Kotsonis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;David Flashing&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denny Ordway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ed Ludwig&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Erin Ashbrook&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fred Chung&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grant Thornton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Helen Wasserman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Janet Lee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jessica Myrick&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Julie Prescott&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Katrina Willman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Larry Blacks&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lisa Ryan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maria Zettner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Matthew Clasen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Michael Nguyen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mitch Willingham&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nick Crebassa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Patrick Jones&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peter McVee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richard Bierner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roland Fjeld&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sam Zeldin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sean O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stefanie Holloman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Susan Vittorini&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tiffany House&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tracy Hopkins&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aaron Smayling&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alex Russell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anna Andreadi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ashley Jarboe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benjamin Venier&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brenda Bowman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cari Schnelling&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Charles McCrossin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chuck Sachs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cyma Kinney&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dave Brooks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dennis Bolton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Duane Benoit&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eric Murdock&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Frank Gastineau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Georgia Rosenberg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Harry Marie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;James Galang&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jennifer Patt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Joel Jenkins&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Julia Dunbar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Katherine Hughes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Khloe Miller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lindsay Castell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Magdelene Morse&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michael Dominguez&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mike Kennedy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Neil Ducich&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pamela Stobb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pete Armstrong&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Raymond Buch&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Robert Dilbeck&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ryan Crowe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scott Cohen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Skye Norling&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sung Pak&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Theresa Swint&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tony Chapman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Victoria Wilson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;William Brown&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alan Shonely&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Andy Reiter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Anthony Witt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Becky Martin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bobby Trafton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bruce Geld&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cathy Armstrong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Christine Sundaresam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Corinna Mitchell&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dario Medina&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Deanra Eno&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dorothy Badders&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Elpida Rittenbach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eva Jacobs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gary Mitchum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guy Thornton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ionia McGrath&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jay Fein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jim Mitchum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Joni Wasserman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Karen Carlisle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kelly Lampkin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lela Donovan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Logan Haushalter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mark Hamilton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Max Ludwig&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Michelle Moray&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nat Gilpin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nona Balk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Quincy Jones&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ritsa Hightower&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Roy Phan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sara Luxemburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shaun Weien&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Steven Ward&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ted Butterfield&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Todd Boyes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Valerie Dominguez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alan Dominguez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Andrew Allen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Anthony Jacobs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bart Folk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bill Stewart&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brian Thompson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carol Triggs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Christina VanderZanden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clytie Kelty&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dana Kaydos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;David Wiener&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dionis Lloyd&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eileen Kiefer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eudokia Martin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fred Wasserman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greg Maxwell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Herbert Flentye&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jason Fortune-&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jill Stevenson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Justin MacKendrick&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Keith Dawkins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Laurel Beltran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liz Preis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marina Lichtenstein&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maureen Gnade&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Michelle Arnett&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Muhammed Yedwab&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nicole Fjeld&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paul Gonzalez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Phillina Ober&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rick Hansen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ross Baird&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sanjit Chand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shahid Hopkins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Steve Chapman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tamara Dahlen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Toby Carlisle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Troy Staebel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zuschuss Carroll&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Chloris Kastensmidt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Adam Bellavance&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alice McCarthy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anna Chung&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Astrea Jones&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Berenike Kampe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brendan Dodson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carl Jackson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Charles Sheldon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cindy Chapman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cynthia Arntzen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dave Hallsten&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dennis Kane&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Duane Huffman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Erica Bern&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Frank Hawley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Giulietta Baptist&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Heather Jas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;James Lanier&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jeremy Ellison&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;John Castell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Julia West&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Katherine Murray&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kimberly Carter&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lindsay Shagiari&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marc Crier&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Matt Collins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Michael Grace&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mike Pelletier&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Neil FranzÃ¶sisch&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parhena Norris&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pete Kriz&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Raymond Messe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Robert Marley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sally Hughsby&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Scott Williamson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sonia Cooley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sung Shariari&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thomas Boland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tony Molinari&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vivek Gonzalez&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Product Name:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Canon imageCLASS 2200 Advanced Copier&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GBC DocuBind TL300 Electric Binding System&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;GBC DocuBind P400 Electric Binding System&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;HON 5400 Series Task Chairs for Big and Tall&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hewlett Packard LaserJet 3310 Copier&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HP Designjet T520 Inkjet Large Format Printer - 24\&quot; Color&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fellowes PB500 Electric Punch Plastic Comb Binding Machine with Manual Bind&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;GBC Ibimaster 500 Manual ProClick Binding System&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cisco TelePresence System EX90 Videoconferencing Unit&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;High Speed Automatic Electric Letter Opener&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Customer Name Set:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Quantity:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0ua4wh50j1zsoh11m2rmw12g4t9f]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[diff:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[rank:sum:Profit:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[rank:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Profit:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Row ID' />
        <field-sort-custom-order field='Order ID' />
        <field-sort-custom-order field='Order Date' />
        <field-sort-custom-order field='Ship Date' />
        <field-sort-custom-order field='Ship Mode' />
        <field-sort-custom-order field='Customer ID' />
        <field-sort-custom-order field='Customer Name' />
        <field-sort-custom-order field='Segment' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='Postal Code' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Product ID' />
        <field-sort-custom-order field='Category' />
        <field-sort-custom-order field='Sub-Category' />
        <field-sort-custom-order field='Product Name' />
        <field-sort-custom-order field='Sales' />
        <field-sort-custom-order field='Calculation_440508400599019520' />
        <field-sort-custom-order field='Quantity' />
        <field-sort-custom-order field='Discount' />
        <field-sort-custom-order field='Profit' />
        <field-sort-custom-order field='Calculation_440508400599629825' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Superstore.csv' id='Superstore.csv_3CB1B4B30DA341F6B012BAEAA6B73580'>
            <properties context=''>
              <relation connection='textscan.07c7xfg0kear6j1f0dfhu0ughs4i' name='Superstore.csv' table='[Superstore#csv]' type='table'>
                <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Calculation field 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore' name='federated.0ua4wh50j1zsoh11m2rmw12g4t9f' />
          </datasources>
          <datasource-dependencies datasource='federated.0ua4wh50j1zsoh11m2rmw12g4t9f'>
            <column caption='Calculation1' datatype='real' name='[Calculation_440508400599019520]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]' />
            </column>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_440508400599019520]' derivation='Sum' name='[sum:Calculation_440508400599019520:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Sub-Category:nk]</rows>
        <cols>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Calculation_440508400599019520:qk]</cols>
      </table>
      <simple-id uuid='{E6F26C53-DB2C-4F55-B1D7-C10D0EEEE7AD}' />
    </worksheet>
    <worksheet name='Calculation field 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore' name='federated.0ua4wh50j1zsoh11m2rmw12g4t9f' />
          </datasources>
          <datasource-dependencies datasource='federated.0ua4wh50j1zsoh11m2rmw12g4t9f'>
            <column caption='Calculation2' datatype='real' name='[Calculation_440508400599629825]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Profit]' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_440508400599629825]' derivation='Sum' name='[sum:Calculation_440508400599629825:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Sub-Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Sub-Category:nk]</rows>
        <cols>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Calculation_440508400599629825:qk]</cols>
      </table>
      <simple-id uuid='{197FB377-8778-4421-810E-B0CEC6DD6814}' />
    </worksheet>
    <worksheet name='High value customers'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore' name='federated.0ua4wh50j1zsoh11m2rmw12g4t9f' />
          </datasources>
          <datasource-dependencies datasource='federated.0ua4wh50j1zsoh11m2rmw12g4t9f'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Customer Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Cassandra Brandow&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Chloris Kastensmidt&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Edward Hooks&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Emily Phan&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;John Lee&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jonathan Doherty&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Matt Abelman&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Paul Prost&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Steven Cartwright&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;William Brown&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Customer Name:nk]' direction='DESC' using='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Quantity:qk]' />
          <slices>
            <column>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Customer Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Customer Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Customer Name:nk]</rows>
        <cols>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Quantity:qk]</cols>
      </table>
      <simple-id uuid='{3A9A7598-D166-482F-90B9-B90D0FC2904C}' />
    </worksheet>
    <worksheet name='Intersect'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore' name='federated.0ua4wh50j1zsoh11m2rmw12g4t9f' />
          </datasources>
          <datasource-dependencies datasource='federated.0ua4wh50j1zsoh11m2rmw12g4t9f'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name Set 2]' derivation='InOut' name='[io:Customer Name Set 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Customer Name Set 2:nk]'>
            <groupfilter function='member' level='[io:Customer Name Set 2:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <natural-sort column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Customer Name:nk]' direction='DESC' />
          <slices>
            <column>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Customer Name Set 2:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Customer Name Set 2:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Quantity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Customer Name Set 2:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Customer Name Set 2:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Customer Name:nk]</rows>
        <cols>([federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Quantity:qk] + [federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Profit:qk])</cols>
      </table>
      <simple-id uuid='{41FA304F-EA24-4B44-B745-1D58B069B94A}' />
    </worksheet>
    <worksheet name='Left'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore' name='federated.0ua4wh50j1zsoh11m2rmw12g4t9f' />
          </datasources>
          <datasource-dependencies datasource='federated.0ua4wh50j1zsoh11m2rmw12g4t9f'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category Set]' derivation='InOut' name='[io:Sub-Category Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Sub-Category Set:nk]'>
            <groupfilter function='member' level='[io:Sub-Category Set:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Sub-Category Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Sub-Category Set:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Sub-Category Set:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Sub-Category Set:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Sub-Category:nk]</rows>
        <cols>([federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Profit:qk] + [federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Sales:qk])</cols>
      </table>
      <simple-id uuid='{067B9184-C648-4354-996C-C5DA85737B51}' />
    </worksheet>
    <worksheet name='Percentage total'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore' name='federated.0ua4wh50j1zsoh11m2rmw12g4t9f' />
          </datasources>
          <datasource-dependencies datasource='federated.0ua4wh50j1zsoh11m2rmw12g4t9f'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Sales:qk]' included-values='in-range' />
          <slices>
            <column>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Sales:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[pcto:sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#00ff00' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Sub-Category:nk]</rows>
        <cols>([federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[pcto:sum:Sales:qk] + [federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Sales:qk])</cols>
      </table>
      <simple-id uuid='{59DC6521-6689-4E17-AB93-54F083CFEC88}' />
    </worksheet>
    <worksheet name='Rank'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore' name='federated.0ua4wh50j1zsoh11m2rmw12g4t9f' />
          </datasources>
          <datasource-dependencies datasource='federated.0ua4wh50j1zsoh11m2rmw12g4t9f'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[rank:sum:Profit:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Sub-Category:nk]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[rank:sum:Profit:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Profit:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Sub-Category:nk]</rows>
        <cols>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{0FAC29E5-EB11-4F4E-9FB2-FB417DD53836}' />
    </worksheet>
    <worksheet name='Right'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore' name='federated.0ua4wh50j1zsoh11m2rmw12g4t9f' />
          </datasources>
          <datasource-dependencies datasource='federated.0ua4wh50j1zsoh11m2rmw12g4t9f'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Category Set]' derivation='InOut' name='[io:Category Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Category Set:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[io:Category Set:nk]' />
              <groupfilter function='member' level='[io:Category Set:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Category Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Category Set:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Category Set:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Quantity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Category Set:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Category:nk]</rows>
        <cols>([federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Quantity:qk] + [federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Profit:qk])</cols>
      </table>
      <simple-id uuid='{BE7D1E9A-3FF7-4D8B-A9FB-E598AAB219FF}' />
    </worksheet>
    <worksheet name='Running total'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore' name='federated.0ua4wh50j1zsoh11m2rmw12g4t9f' />
          </datasources>
          <datasource-dependencies datasource='federated.0ua4wh50j1zsoh11m2rmw12g4t9f'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[cum:sum:Sales:qk:1]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[yr:Order Date:ok]' ordering-type='Field' type='CumTotal' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[cum:sum:Sales:qk:1]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[yr:Order Date:ok]</rows>
        <cols>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{E3A1917C-05AE-4EB6-AB95-0B82BBF8B462}' />
    </worksheet>
    <worksheet name='Top performing sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore' name='federated.0ua4wh50j1zsoh11m2rmw12g4t9f' />
          </datasources>
          <datasource-dependencies datasource='federated.0ua4wh50j1zsoh11m2rmw12g4t9f'>
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Product Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Canon imageCLASS 2200 Advanced Copier&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Cisco TelePresence System EX90 Videoconferencing Unit&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Fellowes PB500 Electric Punch Plastic Comb Binding Machine with Manual Bind&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;GBC DocuBind P400 Electric Binding System&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;GBC DocuBind TL300 Electric Binding System&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;GBC Ibimaster 500 Manual ProClick Binding System&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Hewlett Packard LaserJet 3310 Copier&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;High Speed Automatic Electric Letter Opener&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;HON 5400 Series Task Chairs for Big and Tall&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;HP Designjet T520 Inkjet Large Format Printer - 24\&quot; Color&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Product Name:nk]' direction='DESC' using='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Sales:qk]' />
          <slices>
            <column>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Product Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Product Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Product Name:nk]</rows>
        <cols>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{E770A0C3-1B66-460E-8BB6-4840D245F70B}' />
    </worksheet>
    <worksheet name='Union'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore' name='federated.0ua4wh50j1zsoh11m2rmw12g4t9f' />
          </datasources>
          <datasource-dependencies datasource='federated.0ua4wh50j1zsoh11m2rmw12g4t9f'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name Set]' derivation='InOut' name='[io:Customer Name Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Customer Name Set:nk]'>
            <groupfilter function='member' level='[io:Customer Name Set:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <natural-sort column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Customer Name:nk]' direction='ASC' />
          <slices>
            <column>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Customer Name Set:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Customer Name Set:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Customer Name Set:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Customer Name Set:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Customer Name:nk]</rows>
        <cols>([federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Sales:qk] + [federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[sum:Profit:qk])</cols>
      </table>
      <simple-id uuid='{88BBBC40-DCED-4668-930C-35D0E4278164}' />
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='High value customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Customer Name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Customer Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4E412107-0F60-47AF-B5E0-AB0068A0E1C2}' />
    </window>
    <window class='worksheet' name='Top performing sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Product Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Product Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5E8EC28F-F137-41C5-8912-9BA4F34611EA}' />
    </window>
    <window class='worksheet' name='Union'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[Customer Name Set]' type='setMembership' />
            <card pane-specification-id='1' param='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Customer Name Set:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[Customer Name Set]</field>
            <field>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Customer Name Set:nk]</field>
            <field>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{11F84341-8EA6-47EB-AED8-C814DC76D73D}' />
    </window>
    <window class='worksheet' name='Intersect'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Customer Name Set 2:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[Customer Name Set 2]</field>
            <field>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Customer Name Set 2:nk]</field>
            <field>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DA6A7DB9-1141-45BF-9240-CF18D216C9C0}' />
    </window>
    <window class='worksheet' name='Calculation field 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8E1E58C0-2513-4521-97E9-86D12A3BA50C}' />
    </window>
    <window class='worksheet' name='Calculation field 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{11B8282E-81A0-4508-856C-50715C1A7CF4}' />
    </window>
    <window class='worksheet' name='Left'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Sub-Category Set:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[Sub-Category Set]</field>
            <field>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Sub-Category Set:nk]</field>
            <field>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FE906782-608D-49B7-BF80-5779D5C1D4A1}' />
    </window>
    <window class='worksheet' name='Right'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Category Set:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[Category Set]</field>
            <field>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[io:Category Set:nk]</field>
            <field>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4B0CDF46-9822-453D-B100-609B5595CFE4}' />
    </window>
    <window class='worksheet' name='Percentage total'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C7811D12-B4D4-47BA-BB20-A3166B42442B}' />
    </window>
    <window class='worksheet' name='Running total'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[:Measure Names]</field>
            <field>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6479DB85-47A9-4DCF-82A8-2D22E72D9F01}' />
    </window>
    <window class='worksheet' maximized='true' name='Rank'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ua4wh50j1zsoh11m2rmw12g4t9f].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{82A19B49-80BA-4DA0-A88E-F17B864FCDD6}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Calculation field 1' width='192'>
      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
      VPP/AT4U2z86XnsRAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Calculation field 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='High value customers' width='192'>
      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
      XY6cBpV0Nf8foYzg3gw30kMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Intersect' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO292XMbWZan+fmCfV8JgCAJrhJF7QqFlJmRXdnVOWbTZl31MFZm9VT/3DzN
      PPW0dXdVZnV0VVZGZWTGop37vgEEQeyrA77NAyMjQhmSKFHg7t+LBMD9h+OEH79+zzl+rmCa
      pomFxRVFPGsDLCzOEssBLK40l94BSqXSWZtgcY659A5gTXEs3sWldwALi3dhOYDFlcZyAIsr
      jeUAFlcaywEsrjTyj19Uq9VLFzVpt9tUKpWzNsPinPKaA3i93rOy48TodDrout43PV3XkSTp
      vbd3u93Y7fa3fq6qKjabrR+mXXm9UqlEJBL5oP1fcwBZlt+23U8wdB3DNBFFCVEU3rqdaZoI
      wts//4kmIInie+/zoy/C+O5fUfzhzq5arfLkyZMP0+ojjx8/ZnJy8q2fm6b5QX/3o7jKepIk
      fbD2secA2Y1F/v3z/8mLjXdnWldXV95b8+s//AvffPUnFjbzR267t/cX29Q2ebFd59WrF9Qr
      JTq9/l31LS4vx3bFwZExGqqd8UiXlVwFmnkc9JjfrvDwwW0W5+YIJjKUt5bJ7ewwOTlMxzWC
      crCKx2yxcqDy6cwwv/9qjpv3P2U0GSKcHGFyYpzZlwssvNihVGszND7J5vIaCiKPb43yp6+e
      ER+ZILu+RHryNg4lx3q+wYPpDHw3aFSqZSIOP9jf/1bF4mpy7BFgZ3OT1EgGwdTp9lSqtRru
      QIx40El+a4fQyDTXMkkSI1M8nBmi1dHo9npUa3X8kQECTpFGT2ZkMEa1/MMkVW3XUEyJjirw
      6cMblPMHJEenmcqkaJTLhBNJDqpNJsYnuXktw16+yNBQGkn44YqvaSrG5ZrLW5wQxxwBdJqN
      OrvPvmZo/BpCdQtXYACbBKpuY+rWDIX1OVZ3VBKxOHY7JAJO1mZnCcVSh14nuQgHPeR3egwO
      xQGQ1BbPl7rcuT1Dt5Lj2WyOO3euo3RNRNOObPrJ13a4MTWMjzbzK1vcvXuHlZ0yzqEMQ6IT
      PEPYZBGn3YrwWhyNcNkfiNnc3KRYLPZN70OjQCMjI8Risbd+fpGiLOddr1gsEo1GP2j//k3H
      zyler5dMJtM3vX7/gBZny6V3gGazyfb2dt/0DMN4Lcz6LiYnJ/H5fH37bov+c6IOUCqVCIfD
      lMtlwpEI7xPZb9ZqOAOB7w1TO3Vezi4xcu0WUb/zyP3LpRKyLOH0+LHLIu12m7m5uY86juOS
      SqUsBzjnnKgDSJ0ii2t1TGx4HBVyxSZD6RTF3BaSN0bAoZMtNkmn4hT3suAKopXz9ColItEU
      Ia+ThYUlrt+6g4hOdnMd0Rsm7HXQqNeQnD6MbhO3x8PeXoHk0Ag7u9t43Q5iKQ922ZoIW7yb
      E3WA4OAks//yL9z5xS9ZmJ0lGnKzuLlBbn6RsXsPWPn2W/LVNq0Hn2I0Ooj6AUgO3F4/O5vb
      hG5OIdiduJ12BENhbWmR7bbEf7iZoKYHkdQckjtGb3eH0ECChcVlrMi/xYdwspdIQSQ1NILL
      ISPRI7dfwuFwEYv62dzexe0PkRmfIOxxUCnmafRMHHY3qcFBXN+Vz7iFHl9//S3Z3W0Ue5CA
      x4Ho8DKWSWNz+pgaS+O2i2SzWUTb0bdIFhY/5sQnwZmJcQRB5Oa9h6iagc1uQ4tHESQZSTBR
      NR3T6KJfu0EyGUMSBQRgfGICgLHpe6RVFdlmIzYwAqKELB3WCo2Pj3+3zV3SqorNZsc0DQRB
      +PBaIosryaXPA+Tz+XdWY34omqa9d8GVz+c7MmR6keLs513PygO8AVmWCYfDfdOz8gCXi0vv
      AKVSid/97nd90/uQ8u7T1Pv5z39OKpXqg0VXixNzAK1TZ7vYJuLU6dpDxAPud27fqeZ5OreG
      MzjAg5mJvtmh6zqdTqdveueVfj70c5U4MQeQnF46xRWWTYlbN4M8+eOXeBIZfDTI5g8YGL+F
      Xtyk2JW4e3uGTqOJ3RNkfCRNKbfB0uY+Y9M3qWeXEDwJzNY+bcFPMiCxlcsTHBhFbuWpai4m
      hkIsLq0zNDlFZXuTUkfnwSf3cVvl0BZHcGJhUEEQuTYawh4YgU6NRk9naWWVhmJw/+FNOsUq
      lUaTvewm9WaPQCrD5FCMpaVFcvka9+9Nk8vmaXVNBqMSS8tZGpUDKlWF6fsPMTtVNE1H6baY
      f/WKtqpyUCpi2kNMpWMoqnpSh2ZxiTjRPIDsChALuBFFGzbZRjIexR8IIMt2/H4XNlkmEh04
      LFmoFlhYWsXpCRCPunnyZI74QJxEMoXTFWIwFcTl9eELBHDIMn6/F5vNhihKjI5mEAURn9dH
      KOTH5fFgl6wssMXRXPow6PLyMktLS33TO6+T4IcPH5JIJC5U2LLfelYY9A2Ew2H+5m/+pm96
      5/2EsPgwLr0D9Ho99vb2+qb3IYkwS++n2Gy2D75KnySn6wCmQU/Vsdukw3/th1c+XethinaO
      Kt40DZ1arYYoO/F53bzPncNZt0WxeJ1MJsMvf/nLszbje055pmiyMj9PPrfFXqX9/bvVnTn2
      mkfvrTUrzK+sMv/iBRWl+5PP9wuFfhprcQU43RFAkJicGOB//WGN/+M/RFlY3cQjdqFnoDf2
      +denS5iCg0zKyW6ugiM0REjf49vFXX71n/8vYiLY7A4ketR35vg21yUz4OXp81eM3HyMmybV
      3SWWD0z+03/8hZUHsDiSUx0BTNNkZ7fI+FCAkiIhdmqUFROPQ0RtNQgPTxF1imgOLw8ePSLk
      lGlpIlOZOLVGBxCQbTaGJ68R8nqYuf8Isdtg4uY9UmEfhmESGxwl7jKpdHqneWgWF5RTngNo
      RJIZgn4HlUqLardOeOIRPlsbl91PcWsJRsaJ+R3YbHZSqRiK16SsmKQibiSbydS4F4/TgeoS
      ccgi8vQdllfWcLicjGYyiFobdzRJzOs41UOzuJicXR7ANOh0ezgdjhOt3d/e3qbRaPRN70Pb
      olh6r+P1ehkZGemb3sXNAwgiLufJP8HldrsZHh7um955zwNcBL3zxKXPA9Tr9b5mgt/UFmVw
      cLCvvYcsTo9TcACdQqFCPB5lf3+fYCiE40dPaHV7vddev0anzKtsh5vjKdbn5ohfn8YnHw7H
      hqaBJNOqlnAEItjFN2spisL6+vqJHR2Ay+WyHOCCcgoOIHGQzxGOeSkc1Gh3OkRDAVw+P61m
      h3K5SMRrZ2WnxI2ZKcp7WUptgxvXxpE7Rbb3uoynQ2wsr+HOjLC7sYo3Pkxx4Wtq/jHGvV32
      t7JkxiZplPeJB1wsbZeYmbmOw2qLYnEEp3ILNBh1svhqFX96nPLOMl5Ro9xoouOgVqthN2zU
      C2vMObwIPRW/10RRNLxAJOQju7WGP5pGVxUqlQrruSZ3x0dIJsbo7s4zODhIYX+fbruG3iyi
      qnY0w8BhLYFmcQSncoZ4Iyl29/IkAw4kSSSaSrK5uEosHkWSRGq1Ki6fD8HQCYSCuF2u7wwT
      icQibO1UGYx76HVb9DQJl11GtsPs3BI2pwe/z4PdLiNJIj6fj0p+l7qincahWVxwLn059Pz8
      /InXAs3MzHD//v1j7XsRojYXRe9ihUFPiWg0yt/93d/1Te9NP2A/qyUtTpdL/8uJoojL5eqb
      nizLVv3+JeLSO0ChUOCf/umfztqMn3Dnzh1u37591mZceY49CTa1Dkur25imytLSKsXCwRvX
      5drf2aD9XccOvdvk6z/+O1989Yyu+vY2Hvl8lk7nfGUMLS4nxx4BBNmJ2qnRKUuI3iCtZhOl
      0yKaSlDMH1ArFmgKHtJ+gUJ2C38ojl820AyTVDpFu7hFOzhGJb8OSoP9UoXE+B2aeytsFRv8
      4hMns8+W8CRG8Jh1ik2ThF9ie7/K+GiG1bVVUqM3EBo77JUUpsbTzK5sgmkCEg8efoLHcekH
      OIuP5CPCoALDAZknm2XiYT+NWgOnA1Zm5xEElYWdA9r1Os1mhaXNfbxuJ6Ldzb37D1DKOQ5K
      RTqqRqlcRRWdPPr5HTq5feRwmlvXMvQaZZo9jZXVdVodjds3r7O0MIuq9mh3VUQB6vUG5VKZ
      Rmmb7H6dkZsPGIhGmM6k6GlWGNTiaD4qD+BPj+KTZHxOmXA0TCg6gGn3kkoNcW0whMfnJZYa
      5fHtcUrlOqausjz/kg5OBpJpNuee4vKFCIZCiKKDyOAAZjVH9qCJ0+vH5XAylkkTiQ9gk0Sm
      p2eQZQdutxNZlPB4XPh8PiLJDOFwCJ9DIhQK4fJ4ccjWwzAWR3Pp8wCrq6tsbm72Te9D1gh7
      F2NjY4yNjV2oOPt517PyAG8gGAzy61//um96VhuTy8Wld4CPrQaNRqP4/f4+WmRxnjh1BzAN
      FaULLodIq6vicb35oZhOR8H1/WcmrVqZYk0hmUq+dfG7jtLB5Xw96VWv1z+qFOLx48eWA1xi
      Tr1c0jQ01jY2UZoVsvsVcns5NE0D00DTDZROm56qsbOzg6Fr6IaJ2qkxt7yNJJh0VRVN7dHt
      qSidNkq3h2kadNot1jc30TQd09DR35SUsLD4C059BBAlJzazS6FQIJScIrf6ikqxRCriodAx
      eP7lH7BFRxmL2Xj+osXUzG2EZpHI8CSl9ZeYTjcvZr8hNX6TnflvyDZlfvlgimypiW6aLCwu
      kQw40AODDLzHusIWV5vTL5gXBIIeBxulLlHPof+lY25ebDWIuEWGJm9xZ3oMu8uHTTAxTQO7
      N0JpaxVfMIyha8SHJkhHvDjDCYaiTpotlXAsjtNuZzgk8zLbJGJ1hbB4D85kEhwbHMIe1hGA
      iYkpXE47d5wdgn4P44YN0+ElNRDBaYOWamJzBZme1Cg1uiQiEcygH5vDRiY9iODwEPJ7yOfy
      REdHKWeXSCWGkEVrlUiLo7n0eYDd3V16veM3yfrLKNBFiotfNT0rD/AGnE4n6XT6rM2wOKdc
      egeoVqs8f/68b3ofmgmenp5mcHCwb99v0V9OzAH2sjnigymq+Sw2rx+ny8dPetX2qhRabuKh
      w1Ymrco+c0vrBBIZpjJJ3ucuvl0podjchL1vfuil3+sDfCj97IJm0X9OzAHEXpViI0bxoEzS
      UCm1VAKRAJ1aFUlvs5qtcWsiQKUuYKoNBuIRNrZz3Lx7H0PT6TZKvJxbZeLWbZq5TXLVHjPX
      0sy/WsCfGsXWKtCUgwy7BZpukUZulZYUImpXWNrc4/qdT4n5rUiQxbs5sTBoKDZAObsAjgjd
      egXBrrO+uslBqc7zZy9oVArslRo8/+oPmPbDNYR1BHr1A56+WGBpdYtb9++yvjRLtWUyHvTQ
      cXgZHkoRD3mptzqszS3Qw6TXLjE7v0V+axVXbIjEQIqA26rXsTiaE3MAuydAPVcgmUki2ZzY
      PFG0+h6R+ADxWBib04vH4+LBp59wsJfFBAYCDl4tbeJwu4kFnHzz1de4g3H8gQAOl5N2YYtn
      86sUy0U6ina4Soxsw+n0EQy68AXDbLz8hu1cjlrbeqLM4mgufRj0NNqivIvHjx8zOTn51s8v
      UpjxvOtZYdA3EI/H+Yd/+Ie+6Vnl0JeLS+8AhmHQ6XT6pqeq6mHx3iXWs9lsV6bX0aU/ymKx
      yG9/+9uzNuNC8Ytf/IKxsbGzNuNUOBEH6JZ32VY8jAU6LOdFIgEX8WgAgGahgBiP437DfoVC
      gXg8/v1rs5NnPmdDbi4jhqewtQ/whsO4bSqrVSe3M5GTMN/iCnEiDuAIJVDmVtiuaqTHhsnl
      WlT3Vin3QN/fp5sYYswjsHNQJpm5Riu7hhQewma2Qakyv7LD5INfMBiMY7TnMUQXplJDNUyc
      5Spa0o2udfnmy98jB9MkXF1Ws0XiQxnq21s0NJNPfvYYv9O6V7d4NycTBhVkPKJCQbPhFXXa
      rRYt08XDu3eYHMtw6/YM1XaXR48+pV7cxeaNcXNyCKXTplSuYqfFTqEGiNh6FXRPArGTRxdD
      9NoddABBwu/3ozSq7FbaPHr0Ka1yjsBAhluTI+j62xtvWVj8mRObAyQHkwhNO0gukok4cq/E
      05eLTI8NMP9ynsmhJE+fvGTq5i3M7uGi14lEErHXRDFk4lEfALGBIYxgENE+gBmMYmsKOBwu
      kiGBhmLiDYYZHXDz7Mlzxm7cQFRNXDYTwXbppzcWfeDS5wHW19f7WgvUr7Yo51lvamqKWCwG
      WHmAC4/f7+9rROMinRAWR3PpHaDdbjM3N9c3vfO+Du+b9CKRCIlEom/fcZnouwO063VsPj9m
      r4Vm2HG7jnc10nptlheXcIZSjA4NvLM0WlfbdA0HbsdPT6Rms8nTp0+PZcNl4caNG5YDvIW+
      O4CpFNhuyzgbm7giUQ5afiK2DopqsL6+ztjkdbx2qLVVomE/nVYH3dRpdQy8DgPFsBGLBOkp
      bRy+GEotS85o44ykMVsl7F4fG7OzxCevE3II1Ds6HqlBSY0R8wnovTatHsSiIcQTXIHe4nLQ
      9zCoK5ymXd6m0jUJmTVKlTJzy9t0lA6K0qXX6zE/P08pv8vW5jxffruMoijUG23W5p7wj//t
      n6hqgKmxsTzPQbWLoVRo1Ar825dPKNVbdBUFtdvmi89/yz/+z9+wV6nz4tuvqXVUtpdf8o//
      47cctLr9PjSLS0jfHUCUHdhaexjuxOFtiygimAaqIRPxOul+1wSrp6oIgkBm6gZBjx3ooehu
      pkciKCogyEzf/oS/+uxneOwC2AOMD4XY2SkQDLrp9VR8sRSPPn1AwOsiM5SgUi3R6Nq5kUmh
      GlYewOJoTmASLDB+6zGmzQEEuBmQMBJeuoaEKx5A0WAwcpdWVyPgc6MbIrLoYDwToJeIoiPh
      doLoCDHgOVQMDM3gRyIoX8fh9iGj0VZNhuMRmoqG3+cmFJHRtR7GQJieLuJ5yyOSFhY/5tLn
      AXK5HEIf5wKapvW1UvI09Dwez7H7m573MK2VBzgCu93+wX+Ud3GRTgiLo7n0DlAul/njH//Y
      Nz3TND96RLl//77VKuWc0DcH2N3ZIpEaprS7jT0Uwuny4LIdxuWbzSZer/cn++idGk28BFw/
      xO/bhU3+tJTF6wnx4P4NPjZFpGka1Wr1I1X6y8d0qrPoL31zALehkG8qVOpNBp12VElifXYe
      w+Fjc3meybuPsbcLlLp2JjMJ9vN7BLx2zKCb/MsXtCU/d26MoysdYsPjGKV9ysUCpWKRSDTC
      5tomI9dnaO5tkK90mZ6ZYGdlGc0RYjzhZn5lh6mbtyhvrXPQUrl3/873Dmhh8Tb6FgYNpwcp
      LM1i84ZoN+oUC1kc4TGmpya5dmOGayk7FS3EVFhjfmMf2R/HL7RotLtUmx3W1lbpaQaYJq1m
      A1mWqOwX8A4Mk1tZoN1V2Nvbp6PamE7FqLRqeKLDhCSNYrWKrtVZXt1BMV2MJ8N0elZXCIuj
      6d8cQPKSTg/giyYwFA+S001ubYHNPZ2QW2Ylr5PyK2wpfu5diyI6XEhdiQHJhRDw4I2nsUki
      YjiGkV1BTGQYjHpx+Dwk7t7n+csFYrEYXlnAJYvIIoimDKoLTWtRV0zSiQR2mw2HDILDmgha
      HM2lD4NubW1RLpf7ptePcuNMJkMoFALOfxToIulZYdA34PF4+tqf0wozXi4uvQM0m82PWiXy
      z0xNTREMBvtgkcV54kwcoF6r4HT7EbtV6mKAgFNE+u624l23GEavzbPnz5G9A9ycHkP6i3j8
      m2rh2+02S0tLH21zKpWyHOASciYOICk1dhQJs5gjOmhQUBw4ejXKLZ3tzSVGp+4S8wrsFttM
      jCRpNGrosoeAoBAensJW3SdfLiF1FdyBCIXsDvGhUYr7uyTDfjb3qoxPjGKXTn8JNIuLxZk4
      gCeeovVqCUmyIysd6kqLVrXB6MgQzUaMWMTL0uw8Q4NeXr1YpSlofHJ7BpQ2q3PPsTv8TMoq
      m90w4cJT5rdKhBsGPrmLVitQVhyMGOZP1yOwsPgLzuYSKdiRlSqm97BZlijZUFsltnJFJENh
      M1tENNosr+Vw+1wMjWRw2WVAZGLmHn/12SO8HjcjI8N4PT4CoTDJ2GFUJRAMUctvU2lb2VaL
      ozmzSfD0w8++//8EQDr13avx794cxjThx7f5si9M5rBbCr7EJD6AiVskxr+rzxk67Cr3fw5N
      Yj0MZvE+nJkDvE9B2V9u8uN9fvi/8BOtH78Mh8P87d/+7XHN/B63+03NHC0uOpc+DCrLMoFA
      4KzNsDinXHoHKBaLfP7552dtBgD37t3j2rVrZ22GxY/ouwMo5W0OzAEitjqVjoENJ/GBwyvw
      9vY2w8PDP9ln8cXXlJoqk7c+Id7nhe0Mw0BVz0dhnNWv9PzRdwew+2PUl7dB6uLNjFDfU1h+
      9ZSG4MVjM8nvbKCLDryhCM1ykdRgCtU4vFcXek1ePn1FKJHmILuJN57BKfQYiHioV1ssbu0h
      CSamATduT7MxP4cjMoxfaLJXOCA6cp12botyV+fBwwd47Jd+gLP4SPrfFUJyIBptSj2RoKNH
      NZ+jKUe5Oz1Op7TLar5NIuZjY3GBlnoY5pHtLgYGBhB1BXckjVHPclDtUKlUMLst5pezeF06
      0bHbhIJ+ZoYHqTaKNDsa6yurNFR48OkD1EYZyR3l+nCCrtq/VVcsLi/9v0QKIvGIh6oWRsBO
      MJGi19zl+YJCIjODW+xRVuyIaoNI/CYCEIzECIfDdJo1JLcNFzLZ0hJer49ERGC31cLl8BKU
      bQiEcNgdeLBht9kYjIQJBAJIkkzA78fEgcthIspWFsziaM6kHLrXqrBTUhgbPno1+K21FaLp
      UTyO4/nqysoKKysrx9r3TXzMM8HT09OMjo6+9t5FKjc+73rHKYe+9M8DHOeP8i4u0glx1fSs
      5wHeQLfbZWdnp296J9XNORqN4nJZzbxOm746QE9RkB1ONLWLJNuRxMNbBUVRcDqdR+/faVCq
      NkGyEY9GvtvfpNfTsNtfv2r0ej3sdvuRmrVa7UwXyn5ffvWrXzE0NHTWZlw5+hoFKuyuUW1r
      bK+v0tUMDMPANE2WlhYwTfP716ZpYugq+4Xya+/rmsrGi5cUOgqm+ef9VbY2sz/s9922Wxsb
      GIaB3m1yUG2yu7WFZhg/2u9S39lZ9Im+jgCRaJSdg316hkivtMF//fxLJh/8CgewMfsVf3i2
      xPQnv0LZXyA2PEW7o7O3/A0vN4r8/D/9FyZSYdIDCXwjaQ5WX/D5l0+4/1d/Q2t/h5eqStKn
      8c+/+5aZx39NJ7tOdn2DiXs3qLRMsi+fUu2qtA/2UHo6Uw8ek/AfPepYXG36OgK4AiGauSUc
      viTVSpNbnzyg1ygB0Oqo3P30MYmQm/jQBFMjAwAohsTDhw8Jel73xUqzxycPbtAoN7A7nRia
      Tq3W4fb9OyjNKrH0OI9ujdPTQbJ5yEyMko4HwBUkkwjS6VlZV4uj6e8kWLAzNjmDKxwEJUNv
      r8bwdAhJAJdNYG0zi9vrIRzwIEgOxkcGsQ2H2cqVcDkOSyBi42PIwEgmw161zY2hGJKUxNR7
      mKbGXrHJyEgEWRSwS5BAxDAl8CYpteHacJSDpsFo2KretDiaSx8G3dnZodVq9U3vpKJA6XT6
      je0jP5SLFLbst54VBn0DLperr9GV835CWHwYl94BarVaX1eJ7Ed36OnpaeLxeJ8ssvgY+uoA
      +XyegcQAxXyeUDyJLAL02Ms1SKYir21rGhpd1cDp+CGWrzTLbOSbTE8Mszb/nHBmBpdgIErC
      azH/SrGIPxp9r87R3W6X7e3t/hxgn3hTSbjF2dBXB1CqBzSCEfZLFeySzsJ6ntsPrlPYr+J1
      dFneqTAzM0ltf4+2JmF3ObCrdbJ1uH1jnF5XZW9nh6lMmJ3tXeTEBOX9XRZW5hm98Skpr85q
      vkNAarGyucXk9C3MbgOPDbqGja2tNewuH81Wl9u3bmCTrAeDLd5NX8Og4UiIva1F7L4ErWYD
      vXfA3GIeUHn65Dm1gz128nnWNg+IB100WnWefPuM8u4y+43DsGVmwM2L2R0GhlKATlMRmZqe
      4cZ4gvXdMndnxjFNianxDMVSkZ2dbVqlbfb3D7APjNGu10mG3DQUa5VIi6PpqwP4whGyG/sM
      DoZoNBpIDjcyIMt2IqEADo8Xn8fN4NAQsiQhSzZC4QCuYAyvDIIo4okN0agWiPi9iIKAbJNQ
      GyXm1/PYafPti0UcHh9Opx27TaJdzvNyaRdJsuF1uwgEAzjsdmuNYIv34tKHQefn589dLdBn
      n332fVn0eY8qXSQ9Kwz6BqLRKH//93/fN71+rOrYz1UhLT6OS/9LCILw0f38+61nGIcFe3Do
      UP1exvV99SRJ6ut3X0QuvQMcHBzwm9/85qzNOJf8+te/JplMnrUZZ8qxL2XLiwtoJqwvLdA1
      /vyuwvzcT3vxG1qPYrny2nudeoF//V+f88WXX9Psvv0B9k69SqNj9fm0OBmOPQKEPCIHtTat
      nkljb51vN7KM37qF2tPIby2zkaswOZNh9ek6sbEMkqDTKGyzX1GY+eQRIiJTN+8Tkhts5XLU
      spsI7gjpgMhGvoBu2BHsLm6OxtC6JnNPvkAVfMxMpZhd3MIViBLxSAzF/ew2Jdr5VTp4SUUc
      zM4vc/PRX5MKWeXQFu/m2CNAMBwnP/8V7sQYpVIRrVNmI1sBDBbmF1DVHm2ljTeSYTjqo92p
      Mze7iKr3UJQfGlU1Gm3MdpHAyB1ijg6ltsSDn98jER8lEfbQUzp0uzoDw5NMpYJs7NX59PEj
      ZL1No9Gg165TKu+xvLpHt9vC6YswMX2PRLC/DbYsLifHHgFsbj92X5yRqINSJ0hTE4lFAsia
      TjI6w1q2jNsVwJVwINpkIqE4nts32Kv2cNklbIaNnbUXuKNprk+OsvTqBbovQTrkRhbshMMC
      CBJOSUAXXBjI2AwXw64Ov//d77B7I0wlnMxtlkiOXcetdlBEL8XsJvvVNr5QmFifu8xZXD4u
      XB5AaZRZ3sgyND5FyHP0Cb62ttbXWqB+FMOdF727d+9+v1rl27jseYAL5wAfisBdM5AAAA2Q
      SURBVNUW5eroWYmwN9DpdFheXu6b3kk9EPO+BINBq5S6j5yoA5QLuxTKTWSXn4mR1Bu36Slt
      RLv7u9JpwDSplfYpNlWGh9KHFZ2GTrur4na9O6qjql1MU8b+o8XBGo3GuSuF+BimpqYsB+gj
      J7pGmMvjp144wBv0oak9Wq02vZ6KoWloukGn1WB7c4VaS8UwD4czw9BYWl3HaRfp9jRajRrt
      dpPN7W1q9SaGrlKv1Wi2WlTrDXrNCoVqi57SZje7yf5ejrm5FXqacbSBFleeEx0BXB4/fp+f
      YMDNyy//gGtgmG69xVjMQd50UdvbRddVRNsmSjdGrVhm+lqGWMjLxlaW62aPxVyNTDJOpbhP
      s1pkOBZg9sBEaBbwiHaGp4dpazZ2V7bpYRB0q+TzVdKjGeyytUyqxbs5tTPEF0lxbSyNrtTZ
      3M6iajqibMdptxFODLH5/Csi6TSYJoLsIOyzU6s3sTvd2G0SsVSG8UwSTBibusnwcJqp9AAa
      YJoGpiDicjoIRAbwux3I4tWucbF4P058Epy5PoUdkeHMEIIgc+3GNVpdg2A4SNvnRBNsyN0q
      BJJEPYez+WAwhMsfIxYNESruIzq8jIRsSAKYQYOQDLhHkACvKGAiovpdNHsmkVAQu6ghWA5g
      8R5c+jBoNptF0/q3WMZZR4F8Ph/hcPitn1+ksGW/9aww6BtwOBwMDg72Te+8nxAWH8ald4BK
      pcK3337bN72zytzev3/fCn+eAKfmAO3qPt88e4UpuXjw6Bf43lDF0Gs2aZomYZ/v+/eUZpnZ
      uSVk/wDjST8qHsLB1/vo93p1Gg0bkchP++urqsrBwUHfj+e06Xath/xPglNzAHdwgGuTdUzn
      IKZSYmWjgOgJMpaOUCi0sBk1Xs1ukJhIg+BCVKp4I1F2t3aZuHkHU1XpKhXahkQ5u0hbCnJ9
      JMzzFwskx1LoTReq1sJhtljJ1bl9ewanFQa1OIIzOUOqBzkcwRSN8gHQI5/Nky0pPLh3C5fb
      RW5rhWyhjCyAppuIusKruXk0A7ROgZYQJyrV+Lcny9x68Akhl8izP32J5HXx/Oks7XKeQl05
      i0OzuGCcqgPINgc2WcThCRIL+4h5Jb7841O6ooys1ng+uwSSB7tSwhU7nLgmE2FevJhDtDmx
      2ey4PBG6pRU2DlRuZqJ8+/VXlNsCjz57xP72HrFEGLvbi9t26ac3Fn3gVM+S6MB3LQGDh81q
      B8dnGBx/fRtDbzOXizEWOWxvHogP8cv4681tk4lf/fD/9A+rLh5WG028tq0gCH0NW54VV/3h
      9ZPi0ucBrHLoq6Nn5QHegK7rNBqNvun1oy/QSeoBVl7hA7j0DlAqlfjnf/7nszbj1BgdHeWz
      zz47azMuDKfnAFqbr774Pdt1k5//4jMGo76fbqPWWd5tMzWa+P6tSm6DZ4sbaKKT//jZY2xW
      aNOij5yeA8hu7j+4i7dkEhOb/P7LWYZCNoTkAzr7SwRsJuu7WeyhUVZW14l4RUxvGhETEwG3
      2029lmPp1RYDQwPkcjlcoRRBJ4h6AzkwhNqqUNzN09RNHv7sZ/hd1q2Axbs5k8upqasMTt4k
      4bPR6alUqnXqbZVPPrmP1+1C1jus7jUIeWWQHNy+/5CIE1o9lbHpO4ham+k7nyD06shGh1rX
      SXVzDjEQIZQc5fZUBt2wVom0OJpTnQNIDh+JsIlkM4mJTpyhSVpPnhOMJkiHbLyaWyOVmUKs
      HuCNphEBl9vJ81cvcIYSDAejiDiIBcd5+WqW+PAUEUcXh+pGbTpJhrw0JRsO2US0X/rpjUUf
      OH9hUNOkWCoSCkeR+lDTv7Gxwf7+fh8MO8QwjL422+23XjgcZmpqqm96Vhj0tBEEotFY3+R8
      Pt/3vfj7wUU4ISzen/PnAH2m1WqRzWb7pnfSI0AkEiGdTvdN3+LdnKoDFHfXWcseYPcEuXXj
      Gu+KaCqNInNL24zfuEnQbX/rdvV6Hb/f/9p7jUYNp8uHTRZptVq8fPmyX4dw4kxNTVkOcIqc
      ahQonBxBttm4dX0cVWlxUCyhNGvsZPP0uh26moHS6WAACwsrjF+bQm1V+fLfv6BQrlPaz5Ir
      VDB1lb3dXZqdHtsbq+xm82iGSbmwx0GlQSGfpdO1okAWR3OqI4AoSYiShCzLzD79E77kJLsb
      y/gDQdabVXTBiagpXLtxnYnxUeZePSOanjjcRxJZe/mCxW2Fx49Hefp0ieDgdRIenV6rzNpS
      gafPFtDtfh7eGTnNw7K4wJxZWtUdGmB8aADB1KnUGtg8UeRmFsMTRgSqtSoujxdFUXFKBo12
      iY7mZSjiQ7c7GB6bYiKTwFC7VKoN7A4nA+lh7sxMYtVNWrwvpz4JvjUzA8DYd5GZW/c+pdPT
      cDvgSdbOdOIwjJVMjxLsqbjdHgw1jobIwM+jmIKEw2mnE20j2R0MxQKoBrhdTpLJQXQkHDYZ
      8RKUQFucPOcvD9Bn9vb2zrSNyYfquVwufL431Em9JxchTGvlAU4Rm812pZ4HsPgwLr0DlEol
      vvjii77pvU8bk4cPH1qhzAvCCTqAzsqrlyzv5Bi9dpcb4+9qTmUw/+RrKh2VxNg0UqfJ8Hjm
      JzP03d0s6fS7m1ytr6/hdNgIRlK4nTK6rtNsNj/6aD4EKxt7cThBB5CYvHWPpiFyIxNjfWUB
      TfZgNos0DBeZgQCuSIJ6aZ9EIo4h2Egmg6jdHu16g3oxy/zyFhMz92jlVqjoLtw2k9LeDm3T
      TsjvYWevQDLsAVFmdWWV5Ng0jUYdU3fgDV7qqY1FnzidMKihUW5ppAMOVHeUhMOkZWjsrM1S
      bcvfhy0l2YapH/bxrFerGEaHldmXVMwAd6bH6JR2mN+tE3eqrGxuUi412CuUya7MUVN67O9f
      /AZYFqfLiTuA3+cDQSKRSOAKBNHKObbqXRLxFMVcidFMFBAQTZXdnT1EuwOf34ckicgOL6FY
      AlevwLP5VaLD15lOuqjJIYyWwt3JKB3Zx1BmBBkBn8+Lz+fH7fYiS1Y2wOJoziwM2qnts1sX
      mEjHOcmOH0tLS8zPz5/cF7yBD5kEn/eo0kXSs1aJfANWW5Sro2flAd6AqqoUCoW+6b1vGxOP
      x4PH4+nb91qcDK/9kqVSics2INTrdVqtVt/03vd5gGQyaTnABeA1B4hEImdlx4ly7dq1vmn1
      u5FVv1seWnofhtVk5wPp59Nglt7Z61kO8IGctx/Q0rMc4Ei6zQorG7sYx57fmLSqByyvbtDT
      DIp72+QOqh9lk2lo7OX3MU2d7NYapXrno/TUToPllTU6PY1SfpvsR9lnUsrvsLH7Z/vWKdXb
      x5QyqRzkaXcNDK3L+uoKra5Ot1VlZX37/X8T06BYyNNVDbRui9XlZertHu1aibWtLMf9Za+A
      AxgsLq3i1Eqs7h2zJsg0qDY6uOmxmd1gM1untLVMXT1+wKC8t8W3rxap5HeodgU2VxbRjGPq
      mTrzc4v4g0HQaqzv1ilvLVM7rn3dCiu7DXr5LVZ2tqkqsLmydCz7tG6bSiVLodpjb30Zw+5i
      cXGZpaUVXNRY2q69l06vVeegmKfa0qhXq3j9btY2tlleWUXsHrCZP16g4wo4gIbdHWFoYhi1
      cswu0YJELOSnrokkvAL+xChDST/1tnEsOVNtkW/A8IAfRdNIJocI+Bxox5MDXaXaqLG2tECh
      kCeQGGU46afeOqagzY3YKbJb6yKjkUx9Z98xHrOWnR4GB2IIQFe3MTSUwiWZyC4v6bEJzGbl
      vXTs3iCJaBABCEWjNCoNhoaSOD0B0sMZtObxRrwr4AA21NYB88+XcMYCx5MwNJ69fIXdLqHL
      fsrbc6zsVAl6jvfn6yodGuU8iwuLNBWTjbUFyvUetuM+ZyPZiEcixMJ+mpqD8vYcy9tVQt7j
      2ae36+iuIANeA0Wzs7F6aN9xgl9ar8PObo5cLodN1liYX6RjyhidOgsvX2ILvl/iSu002c3m
      2M3mWZ57gSLY0HoaSrPM4sIijsDb105+F1ciExzwuig3u8QiIcTjhM1Mg3LxAEXV8Yei0G2g
      SS6CPvdH2aYoHRwOB9VSEZsniNf19vYvR6F125SqLSLRCEqzgiZ+jH0mjUqJjiETC/s/yj5d
      VTgoljGQicVCVEtl/JEYkq5QqneIRcPv9Zto3TYHpSqmaMPnkmi0FBweP1471NoasUiQklUK
      8VP6XQphcX45zm99BW6BLCzejuUAFlcaywEsrjSWA1wwTNOkWStTqTWPnfyx+AHLAS4Y7f0F
      /t///jv+7Tf/H4vZ+pHb/9vv/xVD67GyvsHc1/9K8ZgJ3cvKpX8e4LKxNf+M+3/994zoL/ly
      /mt2nkcIc8DAwwn+6//9/+AZ/RnR1iodWcYdGOGbP31OMJZmc3Oe0ssnuKsebJV1bl8fpOq6
      zsOp/q3FcBGxRoALxkB6mJW5WdaXN4kOJWg1axTLVbYXFxm+eZduvY7sDPLLXz7E6R7g+rVJ
      xlJhdF3m+u3r3L01w8xonP/9LMfMuBUetkaAC0Z48jPudb9lftnk1q0hXJkqovsemUyI2blV
      Zq4N45UNghEfdxwC7USPfE3j0YP7BB3wcnOTiKkyMHodt9U4wEqEXTlMk1azgcPtRZYu1w2A
      9UywxdEIAh6f/+jtrgj/P/+3hqEAUIIoAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Left' width='192'>
      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
      c9YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Percentage total' width='192'>
      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
      1n51oWESAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Rank' width='192'>
      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
    </thumbnail>
    <thumbnail height='139' name='Right' width='192'>
      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
    </thumbnail>
    <thumbnail height='124' name='Running total' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top performing sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Union' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2953Md2Zmn+WTezOst7r3w3oMECfqiZ1mWle8NaTTSzHTPxpr+trEbsd82
      9GH/gI2NWM3urNSlUPeot6XSqKSWqSqSxTL0BiQIEN7bC3O9N5m5HwCyyCKrWEXCCvlEkAFc
      ZJ5889z85XnPOe95j6BpmoaOzjZF3GgDdHQ2El0AOtsaXQA62xpdADrbGl0Aa0woFNpoE3S+
      BF0Aa4wugM2NLgCdbY0uAJ1tjS4AnW2NLgCdbY0uAJ1tjS4AnW2NLgCdbY0uAJ1tjS4AnW2N
      LgCdbY0uAJ1tjS4AnW2N8LglkaFQSA/iWiWSySQ2m22jzfhKaJqGIAgbbcZXYrVsfawAdFaP
      4eFhGhsbN9qMJ1IoFFBVFaPRuNGmfCXS6TQWi+WZy5FWwRadL2F6McZvr13caDOeiKZpoGkI
      4tbwilVFQTQYnrkcXQBrTDyV5VLP1EabofMFrJsA4nN3eP9sF2lBxOqr49jRfZQ6zatWvppP
      cvfKR/RMhrGVNnP4ub347TKr49HmmLjRj3X/LvxbxEfW+WqsW3tXyKcobX+Zb33zLfaXZOgc
      mFu9wtUU3effY87SxqtvfZMDjX4KmfTqlY9CcGSS+CqWqLM5WD8XSBAwW+047CbiBhNW2Qi5
      OH13btI/Gcbsb+Tk4R1IkVlmVSOR/m6kuj2USHHymRQD0zEqXB7crU2UmAzEw5NEsl4qS20Q
      nWTC2MYbB+qXb8jlBEBTMkz23+L20AL2ylae62gguzTL3OwE41NL4Gvm9PF6pm5cp2tiERWo
      2H2KnfYw127dJVYw07TvMO2Vps/uo5Cg68pFxpby1O45RkeZwtVPrjETSyMaZPY8/03q3OtW
      qzrPyLq1AEo6xoXfv83//Z/f5uqsSH25BzSQ7V7q6muxhQbpXcqSC81y4+oVUp4Gqj1G5geu
      8GF3lKYdbZS7Yty8M4eiFZjp7SdrWn4wM7EoBocdiTi3/vQO/+d/+iVXBucJzgzSN51n94F9
      eCJD3BxfIjo3xkREYvehfdimxghgpLSpnecO7sJptOF1mVBFI8XlNdSWm+i5NYzy2V0w03Wd
      ebGI2poS5jsvMFlw0rr3AAfbq9EMRRRtjRFPnRXWrQUwWJwc/9bfsr/ZSmS8i2vDsxQ3mpmd
      HCWUUsksjGILFmiVFYoaD3F0RxlCPo1mKebwrgNU+Yzg66B85CMm52JM5Ot40SMhACa7g9xI
      nALV7H3ze5SNDRBSCsQSETwVrdRUFlMtzvPb8QRVDg8tOyqpKisi7xukgAGr08rsWJLafQep
      9xqZuDvN5MQiOTXJwoyTODtX7iLFxFiAJU0mKRmQbU4k1YjNKjA2buTYyV245PWqUZ3VYP1c
      IE0lnYwRiyokU0mSGTOZaAHFVcGJfZVMXgszKwiAjN1hud95NZpNmO+PTZsornJx7Uw3Va+9
      wb1nTXTXUFf4C5/cttNR4yIUCpNzuvBZnQwNDjNfCsHBeXyl5ZBPPWyXmmOy6wZLcjmNNolM
      JkUwodCw+zncwgyx0NIDB5vx+61ErDs40uQjlwwjKlHudN7FXNOKkSxZxYzp2UfndNaJdROA
      JNtZ6PuIP/YJmD2VPHekDpcth3fqEmc/nqe2vIGaIhlZ9FNy74EXDbi9pZgeeKt6XF7U4jRN
      butnHxps7Hr+NLc/Oc8HvQls/kYONnnwWz00R67x6dnzOKp3cbzeT2ZRRbMuu07OykrIJhgO
      hRgJTDDSBZX7XmZPtZdPrnyCWFxBU0sNJgz4GmuwIuM7eoqlc+d5byhLUVUb+xpU5kLzRKdn
      uGOQ2P/K92n2rlet6jwrW2smeKGbn793l11HXmR/YzGGLTAi+a/nLvOzcxMbbYbOF7C1BLAF
      +fhyJ9cmMhttxhPRVA0NDXGLzAQrioJhFWaCdQGsMXos0NqwWrFAW0PuOjprhC4AnW2NHgy3
      xgxNB/nff92z0WY8EW3lf2GVoqfWGm2VbNUFsMYUFJVwYvN3grcrm1gAKW68+w5XZhOIGChv
      PcjJox0Umb+8569pGtlUCtlm47MjM9z95AMu3plCkWS8DQd464V9SNkIeaMb2yOztyrpZBaj
      zcLjr5Zn9GInavtOGl32Z7xPnY1kE/cBVDRbMz/++7/nf/wf/o4aa5DA7FeIx9Q0+q9cIfq5
      sjK2av7mh3/Hf/8ff8QeeZjrk1nis308vsgU3ZfukPzii5BNJsmq6te7JZ1NxyZuAUBTcyRi
      MdR8nHhcpajJSmy+j/PvXWQua6DxwClO7CpjanwULRHm5vgijnSWO0MDWAcG2P3iv+GFVs9D
      ZQqSmbJyL+PpLNlUErUUCuERfv+v51lIi7SfeAVP8DrnL/VxZegmjYe/yQs1BS6c/4SRMDQd
      OMHJjvL75amZMLcufMiNkTBlO4/z+rFW5K3hRuuwyQWQC4/w/u8nkI02Glp24DAJSJKLmuY2
      POkYI6ODRGuLiAdGmEpW8sab38IhQcX581S/9BJFDxaWXKDzWhCjGSKhFB2nnWQuB0kWIDIx
      hFq+m5cayvD6ivHuOE0qU0HrK8/hUHJ0XXwfV8eb/LdVApfeu8hEg2+lUIXp7hsMxY20tdYz
      f/c83Tta2Vf0mJvR2ZRsagGYvG1875XDOJUcI71dBBbDOBP9zOedlHk8yJEImqIgWIvZ29aG
      0yiiqSoay+tbNfgsc4DBiMPlwOa0Uruzkio7jK1cp6jlIK3qIFN9N+i17eAbpyrgXhmqiqJp
      +HweDCaockMwo7Ic9VwgklTxFvnxFNkoOlZM6eotctNZBza1AAqpee7cvIlFU1kIzFPT0Yym
      KmiKQiaTJpvLowGiJCM/MC2eTU3TeekmjS07qfWtzBaa3TTVtVBU9OjsYSK4SEqRcHm9FFJ5
      8khI6WmuXDNQX9VEkdtJ79VPWHLBZNjBiy6ZeQCMVFa46OsJ4bZJiGqOZBZ81kcuobNJMfzk
      Jz/5yUYb8XhEjJJCPJlF0wTKGnbQUFGEzeFETUURrD4am+op8biw2WzYrFZkafltb7fbyCQz
      WItKcFslQMBsNmOzWZGkz/r9stWBw+XGbtSIhaPkNCtNO5vxmM04PBZSsRRmdzG1VeUYtQwp
      xUzzrh2UOC2YbDYcLhceXwluWSGeziPb/FSVF2F8YGhhcGyazrEoOpsTPRZojdGjQTc3ugDW
      mGu3ulnMbP6OgaqqaJqKwbCpveL75PM5ZPnZA/e2xt1uYYocFg7t1aNBVxs9GlRHZxXQW4A1
      JpdXmAtu/oxCiqKgqiqyvH6r+i1GGbdjY91DXQBrzMhsiJ/9462NNmNTcrKjhv/5+0c21IaN
      FYCmoRRyZHJ5ECTMZiOaqiKKBkTxq8UTqGoBRRGR5WVvTlMLpDN5jGYz0koZhWyaPBJmo8zn
      MxtqmkohlyWXV0CUMJlN98/T+etnAwWgkY0HuHnpMiOLSUSjh8OnjxEanqCpqRW3+6s1jfH4
      MAMDDg4dqlguNXyL//SPvZz+9ndor3UikOXKb96mz9nO918/ifPBFl7TiM70cflaD0uJLKLJ
      zp6Tr7Gz7HEzWXHG+mKUtVWw+cd0dL4qGyYATdOYnRim4NvND16pR8inyIkaITQ0TUNVVRAE
      RAGWM3cvj9YKgoAgLP9+7/OHxnEFkYrKehKxeVTNgZiYYEZopN4DoH2uLI3R3j5K953mdI0b
      LRsnpZoeutZnP4uYzDIin52vaay0KMvlIgjL9q1D/emsDhvXAqgqqUSc8uZjyAYRDHYkkpCa
      55M/dROIx5ErnuPH39zN3M2Pef/mCKpkZNeJ73K0VuPS2TP0TobISQL1u996qGhfSRHxUIxs
      oUC4f4riHbVIiQBaIUPv1TNc651D9dRy+sUWwqkqnqv1EJ3qY3wxjb9uJ+LMFT5NtfB6RynZ
      oTO8lznEt3eH6bwW4sW6Yu7+8R0W7UYiQS8nX6ph4PIlBqbjuMp38NprR3HpPastw4Z+VY+d
      gzPYaT95iLcqBC6/30cKCavbidNqIZEO0X1njB1SjkTpc/z41WoysV4Ghh4uQrD5qYl1M5OI
      Esw4aKw2MZ6AdHKOuZiP7/z7N7CLGggB+pTl97VSyJML9NJlbOB506NmPUgul8JaeZTnT/qZ
      vPwX7owsYbOZCHR/TN/BoxwuWaUK0llzNk4AoojV7mBucoIaTy1iPk1O1MBkx+u0YjAUMMki
      pGe52p/jxW9/D2NumDNn8uSyeYw2C7KgkcwXHkheew+ZxjYXv780QmmZDZv5M8dfkmUMoogg
      qkApLstlxmfa2FG7C48Y43x6uTOtKgqqkiOeSD1SSxZnGbWN5RiFHDkcHHjhTToaStDyabQn
      iEdnc7FhAhAEgYqaBmYuXeGdgWtIRif7Xjj86IGSHb85zLk//QWH30BOq8RWWUPiL2f5l9tG
      THYNt9/3yGmG4hbMoV9D41sYDcsrt8zWEjymHv7y298gOMs4fuQQDW2NXL70Z3oUEApZKo91
      YHKWkL3xKb8eNWLLBmDX52xHWAmzNlJdX8J7H19kokfGbHOy9+Rr2HURbBk2NhZI0yhkU8RS
      WQSDEbvDgppXkGUZUdTIpvPIFiNKOkk8nUcyGZGQMNuM5JNxklkFg1HGJJsxm5a1rCk5soqE
      2SiQSSUQjDZkQSOXz2M0mVDzGRLJNJpoxG63IgkamVSSdK6AIErY7HaMBo1UPE5GAZNsQDDa
      sBpV0kkVk81IIZ3GYFlZL6wppBIJMnkF0WDE7rDzQMCpHgz3JTzLPMBfxyZ5goBktlFkfiCp
      /v3UygImy/KrVLTY+XwYv8nmxPSYXPyCwci9dfNmq+P+5+aV9QKi0YLb+HBhFruTz1el1enm
      4cFQEcvK9YwPVrxgwOpwoS8B2Jro0aBrTE9vPzbP5u8VK4qKpqpI8vq9E+0WI3730+0o8tfR
      AmwDzEaJujLPkw/cYLZaNOhqoUeD6mxrdBdojblxu4eosvl7CKqqomoa0iqkHF8Pcrk8RuOz
      R67qLtAaMxeM87Nzmz836Hblawkgn4oyMT5GIidgdhVTW1WCWXqcF5UntJDEVez+gtSCXw1F
      yRCL5HB6nY+Uk00tMjY4QwaQzC6qaitxmZ/1jaARmx9nIpClrLken+UL/OFChoVICrfbjfH+
      /RcIL8SwFxeh75O3dfhafYDU0gJD46PEk3Gm717iw5sTj5mFBUjQ3zVC9hmNK+QiDPVNUnjM
      32LRCQb7A6RSSRZHb3GxdzU23o5w+9M7LCbSZFNxem5fI/K4vLaZCLd7+0nmHkyNmGWka+BL
      0inqbEa+pgtkoqxhJ+3NzQhKmu5zHzAYrqHFniEwM0eyIOIrr8JthXw6wtToMLLBSklZCVYJ
      4sEAC5EUJoePEr8bLZeioCpEgxFMnmKM2SXmwykEyUpJRTkykE9HmR4bRsNMSVkpdvPy1qhI
      Zqpb99DR4Sc528PFGQWUDOGEilwIE8xZ8DtECoIVp81APBJHstpQs3Hi4RjxrIKjyIMSD5NS
      jFRU+kksDTOdtbLP58FqtmKrrsciaxSySRYC8yQVGX9pKa4HakTNp1kIBIhlEizEM2z+1b86
      D/J0fQBBwCBZKS8z0RdM4Znrpnchg1BQmFtKsvdgBelogIkJgXw8zuRSO3tqBK5d6EK1Wcmm
      hmk48BxF2Snu9gyRtZSwo8ONGBhhfDGPoiqE0hI7axWCs8PESJGLpQjuOsjB5vJlAeQSdF+8
      weCQDaOliB0H6iG7yLWr/QiZLKaadvJL44TEnRzaaWPwVjfuHW2kRm8yEVAwSmnmUiJVfhfZ
      xRmWxDcpii4RiYaZnnJg8diITo5Q0e4mPX6XwZkkqppjIpTlVNNKRmgtz+TdG3RPxzGbYTGu
      D6ptNZ6hE6ySyyoY3XFun7tOX17CJKgYi9I0tlfgKGmi49RBjJEprg4uEJyOIDac4KX2IuKj
      17kyH6bIXkAubub4gXbMssLgcIKpsWniyQzenI/Gugr8NbvYfWIP2fFRxtX0A5Zbadh1mKa2
      IlILQ/RPLtHcLpHLGjn84km8NiPjvY8JQbD66DjYSKUnyvs3Ipw4vgvD1Mecy9s4smcXk4tJ
      Xn65BSUVJwqohQI9l85wN+HBIiqkPTLHGlqXy8omCeZl9p84TZkzy42zd56+OnU2hKcTgKYQ
      memjc9bM4d12Br2VnD71Gm1eE6l4DMm0kndTgEQkRDovILtN5JbC5FUXsVh6OUObZKWkxI1Z
      FhG0GYYDHr73706TmrzNrREVDTBIRiSDSE4QEcUHRmxFEavTjd/nJyOFuHElAvgwe0vxr0Sj
      CZqGoirkknGWwhEcAKIByWBAEEQMsgnZICyvavn8Wsl7CAKu0mZO73mD9lIT4WgKk2HZ09cE
      gUImTTqbQ82nSaTzT1WdOhvH1xKAaMgwcOHPXPrQisNfy+HjR/Cb7MiHavjzu7/kE8VA9c7n
      OP5cDZnFbn71/3RiLqrmyPOnKLVnmRs7yy9/fg572Q5OnSrFEJlGFu6N7/gpt1/kV2/34quq
      wesoRhQMGFd2yRYlCfmBKQsxn+bWuV9z6ZKMZPGw69iLIBQwP7CrdlFRMTff+x29t12YTR6a
      DCKaUcZgEEAw3A+gQzJj1parw2xe+UwUMRqNSLJMQ2MtH77/T1zMGylufY5v7PFhNpkwmBzU
      l9k5+6d/4mOjHbNUzv6n/SZ0NgR9ImyN0aNBNzf6RNgaIwoCFtMWqWYNtsyC5lWyVW8B1hh9
      o+y1QU+NqKOzCugC0NnWbBHndOsyF4zzl65rX+ucH53ehcfx7M27zpPRBbDGRBIZzt78eqNA
      3znZqgtgnVg9FygXZnB8aZUK00jOj3Duz//Kld7AY4PhPo9ayBOYHCVx7+DwCLenEo89tpBf
      ZODuHHlNY2b4NoupJxSejzI4vvD4PEY6W5rVE0A+xsRc+JmKiM4P0tk5Rk5JMzg6hbduN201
      nq8WUq0qLAVmSN0TQGyKgcDjn2ylEGJ8eBEFWJwceHzE54MU4kzOhr76jehsGdbABdLIhie5
      fK2PrNnHwUN7KCos0D0VJRqYJC242XvkEEWpUTonUyQWZxBd1ezZ04ZkceL3m4iMdHKrdxi7
      J4UqWWguSnD9+gB5awnPHd6DKzPLcNJGYaaLQul+2isdX2JPmqHrNxlZjGEuquXAwR2PjddP
      LI1x+/YACdVM3c49NJa7yEfnuNN1l2AszJzQAGqO6eEeekcXEGyl7D/YQiYYwu4pxmkzkg4M
      sWRrpMqxVQbTdVZ9FEjLLtLZNY7NX4rfuMTFzmnU+DSdgwE8VU2USnP0TiZRgsPcnkpTWt+M
      ITHC1FKGZGyOiYkQVl8l1dWVNDW3UOlIcqtrGkdJGT45wIXOWdToJJcuXyNQ8FLsupeFSmVx
      5Ab/5Wc/5ac//Sk/fecT8gUVUEG2U1Jehik9wt2JL4rY17B7Sih2SYyPDBKNJ+nuvEnOWUlr
      UzVOswSagiZY8JeV4slNcHsyjRCZpGc6hKbG6euexaAnxdpSrF4LoCrkVY1ceJGh8SEkow1B
      AE9NnjxQ3rKPnU0uUo4gt5YUBItIw65DtNbCtBIgXtDuy9Hs9OEv9lNaUYUz1cvQ+BCW+eV1
      tb6GPAXAUbWb4wfLHrgBEX/DAf7td05QbAYmPuJfFkRIRhifHieUyJBOhfFYI1D2qPmx+UlG
      RhbIZZMERS9tDY0YzD469rThyEwzEkqg5FIEZsYZm4+iJOZJGXbz4rEmBs8PEjC7Cfmq2WfU
      3/5biWcWQCGbIa8qLI2MURCqkSw27NYy9r/yPCUmhVAog8jT9w1kmwOHrZwjrz2PT84RCucQ
      VLA7nV/JeDU8RaKogzde8DDe+SHjX3BcbClC47HXqVImOXdrAtGgkYwvEViMQSFMJK1QiMeI
      Gf288sZx4n3n+DgrgNFLS2mM925mOHJw71Pfp87G8MwCUGJTfPDhFTLORl46UYvBLnH6aJQ/
      /uuvSWNl55EXKPF5KVvxvA1mL363jCCXUbLyxrc4/YiSAbPowe+3IAgSHncRZqOIwVbPq4cj
      /PHdfyYr2Ok48TIlTh9l0udMF0Xc3uLPEsvZSqjxmhHLd1Pd80d++19FGtoqqXFbEA0iZZV5
      DICntAaTEcyN9Xx47rcMe6qpqK3F7nSys6Waj878jtu2ItxV7Zh8JVSNDfGHd/9MfW0ptSUO
      QMRZ3Yx/bASff/Pn/9F5GD0W6BmJjHVy5soA9YdfY0/doyNWTxMN+n/9T29Q6XeunpFfge0a
      C6RPhD0jrpo9fLe6A1EUHxucaLcY2d/8mE7Hl2A26l/LeqHX9DMiiOKXzlNUFbv4347qy2Q2
      K3ownM62Ru8DrDGXrncxuLT5q3h500ENUdwa78RCoYD0+YGQp0B3gdaYYCzF7z7Vl0RuVtZF
      7tngLLPxr58nrpBPMju1+KXBcJpaYHG8h4/OvM9HV3sIpfTMDDpfnXURQG5xmunoZxFn2cVh
      zt8afuJ5SiHO9MT8F6RfXCaxMMCVzmm81Q2U2Ayks8+akPExZINcOH+ThO4t/tWxIS6QaHZS
      X2GCQpLpuSWiC3MEUypVbXup81lIBSe52z9OPJchTzmalmO85zZT4TRWbzWtzbXYZAHQWBgc
      purEm+zyr9yKphGZHaR/NEBBdtDQ0obbEOJu5xBJwOgqpb2ljuhEF+MLKYzuclpbGjDmI8xO
      TDIfSWDylOAW0swupShraaehyERpfSU2NBLz4/QMTZETLTTs3E2FU2BuqI+hQAxzUTX72mt0
      v3ILsSE9nnx4kp7xJchHuXOtk5Bixm2KcqN7FgoLXPnoNjmrB7fTumygppArgN3hIhEeZXI6
      trI7fJrQkozP+/Ajp+RySFYHxnyC4fEJFNGM2+fFIiaYno6gAvm8itXhJBOaYXImSCI8Q+/A
      NCaricm7nYwsZnHJCboGZyEf4Wb3GKCSyeQw2Rw4jHG67kyjRSe4OhTG6XJiRP3S1kpn87Hh
      LytzeStH97diMHiZP5NGW5ig0HqcF3cWkU0H6Lq5hJZPMDU2xGQ4TTydp9XUSHOdCwNmXO4C
      8YQCzuXReA2N4NwYA4OLJBIxtLJ97N3RRGlJkmiqmlcP78JGmJ7RMYaCCeLhHLXWCoqrrFQ3
      t7OzvRg0mZqaZrzmBQJ3Hnik1TzR4Bz93aMkcglSwImj+ykT7tA/Eqe0pJacCqatMZCiw2ac
      BzBbiE+MEcsrZGMhYlnQ4uMkPEf54Y//LSd2Vz4Qzy/irS5i4NJtotkCidASoUSKYLDAqf/m
      R3znpUP4bAZyyTCjYwtUtbXglKGQXyAu7eAHP/p3PL+vFstX3cQgH2M0JPPq937I9986hs8i
      QV6g9rmXee3kXuS5AabSTy5GZ/OwLi2AwSbT/8E/cyOjYinZy7dPePG7LGAw4XXbVhIcmfF6
      BQRPAwfLzvGbf/gZlrJaGmtakDz1+KL/H7/4hUzd7mYqXZb7YQdFdQfZHbvAu7/8OaKvmRdf
      OExFlZ0zv3wbd3UzJeVlJCdvceHqAFy/irmslTdfOIjP8Ad+8YtOapvaKHdbMZoEHHYDYMDp
      dCDLBjBY8LoVEI2U+V1g8rK7fIB3f/VPuBprKS8tRRIURq+doWs8jLf5CAc2/25IOg+gT4St
      MXpqxM3NhvcB/toxG2WaK4s22ownorE8Gyx+UZbsTYaqqqsya623AGuMnhpxbdBTI+rorAK6
      AHS2NXofYI0ZD0T4z2fPbLQZT0Zb7gMI4vbqA+gCWGPS2TwDk8GNNkPnC1hfFyg9xwe//TWd
      U+mVUAaN6OAn/Op351nIgqaqqI/pk6vxIbpGHp/m8MvIxwLc7h0gfS+cNJ/i9rl3eO/2zPL1
      NY14YJDf/uIdJrN6FOl2ZH0FoKTIuoqJD/SRVoFChK4BBacYIKPAwshN7kxEHzlNy8UIxr5K
      htCHUXMplsJRlHv7WasFDDYDgaFp0try0F9gfoRkMEdaHwzblqy7C2Q0+rGJAUKJAobMEgmP
      F294HgBZlrFYzGhKlrE7F7jUNYmrfh/HmzSWRm/wX/tmyDvqeP7FYzjy01z44FNmUlC/9wSH
      d1WRmx/k40+vEZXLOHby+OPyX4G5mGbrAsNhlV0ehWggQVGJGwFQM0EunT3L0JJC03MvcrSt
      FCU2xZm/nGM+Y+XQq2+xo9TKdPctMnKW/kE48UY705c/5sZwiPKOE7y8r1YfWdhCrPt3JRpN
      eF0uosEg88EYFSV+xJWOVyo8y2KiQCzQQ9+8i9f/5vuc2lOLRQRFcHLszb+ho1ZjdjKMKFuo
      atrJnvZ6gtMDzC9E6L7ZhbV6J42uLFe7+smrj7NAonx3PUt94+Tj/SyYdlFhF0FL033pOnLT
      Cb7/vVeQhz+lez7IlXOd1Jz6Lt//9gnmrnzARExhpvcmd8NGjr/UQaLnFmNZGx0drRTufkzP
      ow2YziZmA15WBsq8VmaDURKJKK4i3yPpRAqxMJaaZrx2K06nC1kSKKlrpsRlw1HkxqRBcm6E
      4UCQSDROJJ4ik46wNB8jm46REmxUl3gxfMGAhmyrxlWYYOj2DP726uWsDoU0C5qdpnIvVoef
      pjo7C7MBAnI5baVOrK4yKksMROM5TK5i9u/rwGMTCIViFFJpItEE1uo6vPrrf0uxIV+XqaQM
      83wfk3EPfs+juZpN/koKozfpHxllbGqGx+0/XUgnMBdVUVVRjMUABsmOp9SOzVVGbU0Fji/Z
      mVGUzNidKa6Omdh174mV7NRas9y628/I0F1uDeeora+hUZrj4p1BRga7GF8yUewxIxksmEwG
      wEhxsRPVaKemto7qUjeaviBgS2H4yU9+8pP1u5yAKFnwuNw4jWkMpS1UOGUEQcTh9WM2CJgd
      Rfg8RdjEKMPDE2QlJyXFXkxmB267BAiYzXacPjfR8X4W0kaqG+qpKPZTVuxicWKU2VAah7+M
      YrcVyWjF43JgWHnOBVHC7nDhMEpYi8uo8DpAMGD3+ako85OcHWVsLkbZrsO0lhYJQgUAABGS
      SURBVLjwl3mYH+plZilP25ETVDolBFHE5vFgRMDu9SMlAgyNz5DU7NTWlGJ+ILx6cGyazjHd
      L9qs6LFAa4weDbq50SfC1pgip5VvHW/ZaDOeiKZpaKqGaNganRg9L9AWocRj49hBPRp0tdGj
      QXV0VgG9BVhjNE1DVTd/N0vVtOV/W8BWAFVdHVt1Aawx/ZNL/C9v39xoM3S+AN0F0tnWbNkW
      4Mq//B9cCRoxSyaq2o9y6kAzduPn85skuHZtlJ07W7HZPte5S8/wh3feYzqew2By0nHkJHta
      qh4aw/96pLh1vof6Fw7hetoidNadLSsAe9FOfvD9V/BnI1y+cINAsILGss9vK6ShKCqPnenQ
      NCwNx/n7I03kkktcvXCFAbuH3dX2x+708mQ0lILC1vCgde6xZQVwD0GSsVnMoKkkF0e59MkF
      hpdyFDce4PVT9ZAKcOadGyzkDNTtPcULB+qRH3zCBRGjvZjWljqGF2ZJumxc+/BDhubTeBv2
      8sLhnSwOdWJvOIwl2sWZG1G+8dZJkoO3mPe3UKPM8PHHV5iKpsmoFTS+smFVofMUbFkBJCOj
      dP/hD9gQkNzl1LlMjN4ZxrXzVf67Bjt9H77H3aUqkFwc/cZJfNY0lz+4zEy2nlrzo+WJogFN
      LbAwegut7jR/95aLwSsXGQ6E8MlGYuEISjqBF425VJRIRKWyLMPQ4BwNJ77Hm+UC1890r39F
      6DwTW7YTbLYV07ajCiWhUtvShMMooCBgd9gQDWZ8boFkBpDNWE0SgmzDZVXJP7KuRkMtZFlc
      DCA5fJDNYne7MRhkXHYLeUXF77SzGF0kPC+w+4CD4Z4AebMJm2RAM1spctme0m3S2Wi2bAtg
      kO34GvfSVlzK7Vu3GGpsp8TrpvPmR0ybDcTiTo53GJgeW+LyhY9ATZM21/Oq/bMyMnP9nD07
      hZpPU5BLOLy7GMNiEz1X3+fMoJFURmLPUS9Om0T69jny5a/SUW1C+fiPKB1Hsdht2NUEVz96
      H6dDYmYeNn/Qg86DbNlguGQ4jOzxYNQ0MokoKUy4LQKhhXlCyQIObwmlHjPJcIiFUBRFNFNS
      XorTvBJ+rWRZmJ0jks4hylZKK8qwGw1oSp7wwizBRB6bp5jiIgeSqBAJzKE4K/BaBULz0wj2
      Etw2GSUTZ25ugZxgxGyyUVLmfeitogfDbW62rAC2CroANje6ANaYW3fukpU2/8yAqqiomroq
      EZbrQS6XW5XAva1xt1sYh9XE3sbKjTbjiejRoDo62xC9BVhjUpk8PaMLG23GE1FUBU3VtowL
      lM1lMRlNz1zO1rjbLczEfISfnevaaDN0voCnEoCq5IiFQyQyCkabkyKXHWmtk6pqCul4lFA8
      hSjb8flcyBuRyFVJE8/KOKz6u+Ovgaf6FkPjXVy6MwMGEVVyc/D4QTzZBHGTiRLn5wPSVgON
      xMIoF692k0VCFNzsfeUwFeYv77Cl4iHiGRG/3/21OjuJuUFmtBJayh8zepMY4spQKa8cKL7/
      UT4XZ3E+Q3GVX29StxhP9X2F5yfxtb/MoXo7+UwGQYa5vlFmHQ6MFVXY7XbIJ0mmcgiyGZvN
      gpZLo8kWjCLk8jkEUQIlSzKVAYMJu92KoOXIpnLkCnk0gwmH3YokCmiaxvTEKEWtJ9jf6EPN
      ZVGNBnLpBMl0Dk2UsdttGAWFtCIg5JPkNJHg9DhzUQmDLOCwmNFECbMskk0lUCQrFlkkn80g
      GmXyWQVBzZLFhMniwiMYAY1CNkU8mUUTRSxWBxZAzWeIhkOogozNbiYWnGWgP4xoM+B2FmHW
      VbBleKqvyltRT+/1c5yd9NPQ1k6FK8GdmzeZNpmYrwxy9HA7szeuMB6Ko5ndtO87jHXpMgHH
      cQ5UGxjovomjYgfxoSsMB2Iosoe2/fvxiiNceH8M0aESztl48fRL1PltoGqk4lnKdvoRRRDN
      ZlAyjA50cmtgDkUVqTz4Akc9QT7qXkAIB5DLywn39TKfgrmlAPuaiumPF/H6PhfXP/wzSe9R
      Xjrs5/bHl6l7oZFL7/ZjtycoVBykgzGGnS34pBiXP73CbCQN+SDmnf+GbzXAwuANzs0USOUK
      tOw9TGqok+7RMIHIDAde+h5Nm39LMJ0VnkoAnqrdvOQoZXZ2loFbNzEeOcLR559nzuVid0UF
      LF7nF5e6sRfZyWfmEF01nGprIjs4RMxfQSolU2EO8Mfzt9C8bpT0LAVXGcdbTFS0HuTAoUrG
      urpRlRywvI2quNISaAgIgCYIyKJAOhEhEgmyONDK0cNGkkmFw6fepMxjJVxVwlxYYsfOWgyF
      IDNnBwkG0+TL9lGcniYajBG2NrHPqKEWRJqOvEql18bCrTEAotMLULWD755uxDB2lt9Elu+/
      qLaDl47VkQjeYWTawqEXn8fqD7P7yA6efVxCZz15KgEkw4soNj+NbUWo4evE8hms5Eml82ia
      CppK9YE3+dbLbZi1PBlFxWzIY5UXmOntQq04jFOconz3i7z8xkFsQp50HpLxYaw2G7IkIkkS
      9zcsFATsTjOjQ5OU7a5CTSZIFRKMhBROf/9vsc7f4N2JZS/fVVFPZdHKZr1KgUxueYZTNHip
      8y7xaZeJHTvK0YJBhi+P4D/6bSQmsJfWUe2zf+5OlxfTCKhkc7n7nxptDsySSEo2LlegppLP
      ZlBUFRWRVdi4RGedeCoBRKZ7OH9zjFRBwF3Rxgs2B3ZVZuL99+nvquWVFw9RnX6XX/7sU4xW
      Hx3HTrCnwUexKcPZOyne2m/HINRQKf2Wf/6H2xjMHnYeOUmt+/HXEwSByoZWZj69yD9cfR/Z
      UcMrb+7Hnlvg3V/9I8VuExn33kfOs5iMzNx5j56Bu7z42nfwVPpZ6pnGvn8nokng/ILGj7/E
      XXFWlqB8cI6fXfwEvzmF1n7k8ZVosJCYucwv377D89/6D7T6nqZWdTaCp4oF0jSN+6cJwv1Y
      +HufCYIAaHx2iLC8G7zG8htVFLj3x4fPuV/kw+cuH4h2v0xhpXX47BoIAuLyJe6fo2naynkg
      COL94x8oEkEUEO5//sB5QCG+SP/YFAVVJBMYRtj1bQ5XSPev8VDVPXCdB7fa1YPhNjdP1QII
      gvDQA/vg5w/8xiOHCDzk1jx6zoNlPfqB8EiZj17jIQsE4SGBfv74z37+/OfLv4hGIyZBI5pK
      Y64+yO4K6aHyhM8Vpi+K2Xro0aBrzMDAIGWVNRttxhNRFAVVVZHlR9PVb0YymQxm82PWtn5N
      9BHrNcZgEHHaNv/Y0FaLBpVFFYvl2etVH6/Q2dboLcAasxRN0Xn+7kab8URUVUXTNAyGp84M
      dp+j7VVU+tciJGb10QWwxixGkvyXbTYKVOl3bhcBFFgcH2RgbJ7lbbwE7L4qdlSaCIkVVLnW
      flwkE56g8/Yo2ZXfBcHDviP1xGMqpT73F26Up6MDz9wHEDDbXfh9LqLBWTRLEV63Ayk0QH9w
      fQaXDEYbvpISjJF+FsUSSko8yOkgQzNLqI/dJvXrkGGws5evv0e9zlbhGVsAAw5fBS1ON9FY
      CF9jC/U+E4xBfH6crvAS2IppaqzFpMSZGB4mmIbS2mYqvBbi8+PMLiVJZDWKSzwkQwukDUW0
      NVUhpoKMjE+RLEiU1DZS4zUTDUwyNLWEaPPT1lKDRRKRbT6ad/hwxLtRy3bQVg1ExlDTUQa6
      b5IqyNS1tuG3CSxNjTAWiGEpqqSloQwpOcds1k52fhhTWQvGXJjoUpBwKo+vuhFHbpLbt+4w
      k49TUt5Ea6mV+ckRpkMZXKU11Fe4iYWWSAZDzMeSWPx17Kh9dNtXnc3Lmo0CBSbGSCqwOHaL
      kfkMc70XuTOdQM3HuX3zGvPRHJO91+kLJMhGZrh86TqRbIGF/n6mEkkymRS5goaoRbnVNQap
      Ra51j6AIAvlMhsITXu/RwASLyQJKeIjrQyHSc31c7J5AQWWh/yKdkylY6OHP568xPJ+CQoLe
      G9cZmY9Ddp7LtycQRBFRFDFIEgZBYGmyh1t9M6hqhoHr15mIxpjovcWdoXk0NcGd672k1qpC
      ddaENesENx04xZF6AwtjCvPZKFMjKge+c5wKMU/vjWuElqJYPX46ag9TWZjGGIize0cbIW4Q
      FfJk4kuM9HaxkEgQTFbw/POvUyqluTOWpKyijsITPCxP7S6O7m5ETtg5O5BjZjhE9b797Ckt
      Ipt08tHHY+TawFO7hxf2FyHlQkwW17F3504clkUiZ0N4K2qprYzRuH8/bmDg6gJlu0+xp8pK
      tPcDrgUy+B2lHGprxucDIXaHx2xprLOJWbt5AEFcCRUQABN2e4qZuQSFbJJgNI5sNt0Pb7gX
      I3E/mEDJMr2YYs/L3+c//OB1Gr12UA2U7z3JGy8cwLY0ykgk84Tr3wudEEAQcTphbiZIXikQ
      npxC9bgxAG6vF3kljEF48JwVtFSMeE5BUTRko0xkcZFCIcV0IIfDKsLK8V8Q0aGzyVmdFkAQ
      sTtcmKQVPZlduFc8FNlsx6qZqDh0gI/PvMM/xKD1uVeoKbWzlHKCBIJgxG61IAhgtNuxmOz4
      S2ycee+fwV+OvciHgQJTPRe43DONpWwHb7gengY3Orw4700MGky4rOryQ2mw4LaZ8DXto/LC
      Od7+2Yc4q/bw+itlGJZmP9vMQpSw260rG2rLuN1WwEpNo4k/vP3/Urr3NU7v6GDxwkf8w9tx
      SlsP8XKZi5lsDGnlvu1uhz6uvMXQY4HWmO0YDfq//vAYR9ur1vQaq5UYS39hrTFGWdoik0IP
      h4Q/C1bT1gioA70FWHOGh4dpbNQ3yl5tVqsFeKwAQqEQoVDomQvXgWQyic1m22gznsi9RU7i
      FlnPqSjKqsQt6S3AGrNVWoCtth4gm81iMunh0Do6z4QuAJ1tjT4KpAOAKIqrMgK0XqxWFmtd
      ADrAFyc62KysRgcYdBdIZ5ujC0BnW6MLYJ2Izvby/u9/z7kr/aQ10BSF2dFR0oCajdI7MEom
      /8wreL4iGmouydTALa7eGL4fwh2dnGQxu7y2LjE/yMB0nM0wRq5pBSZ7LvKn37/L2Yt3CGcU
      cokEs3Nz5AE1EeD2wAxPU3u6ANYBLTPDlasTVOzeQ1G6nyt3l1A0jYWJCTKozAzeZSmhYliv
      9ZuqwvRQN1MpG4XFce7F1cZnZgjlcxQSM9y4MYut6NlnWlcDJXCX7rCd9v0H8WlL3B2cIpNK
      sbCwQKGQpr+rn4IsPdVCJL0TvA5kpsdRG/fRXldCxitz49ooqZZ9ACiRUfoCAvtPNKzfjjei
      RPXOw1RpGl3nJh/6k5ZP0d/Xj2f3fio3yS44hpJdvF4mIgJycgFV+6yeojP9BAQfz1UXP5UA
      9BZgHchmwe1anrUUDQ4MYoRcQWV26FP+8e0P8ezqoMi8GUZgFvngV7+hK2qnrsSx0cbcRxAE
      tHyaQO9F+hMOGmrKMZBh4Mpf+N37A1TsaMYqPV396QJYB4xGiCeW14ppagoNF0ZJpLzpBD/6
      4XNMdXUTyayX//9l+HnlB9+l0RxidC620cbcR9NyDN++yYyhluf3NeCyyICZlsOv843nKxm5
      O0w6/3S9FV0A64C5tIR0fzdz8RSzAzeI2auwrLywpJJ29vpz9A1OkF+vsCxNQ1UVlEIBRVVR
      CgXUlWuLJgcde3cS6blNIPdA9u0NRFm8y4RazY76ElRFQXlgPXhR3V4qC3MMBUJPZevmcPL+
      yhEdjRzfG+L9X/8KY+1B3nqhHIOm4CouxoiB2l0dRDpHiGYK+CzrEIymFhi88ic+7pkH4MbP
      f87+N/+WOq8XUZIx26s5cCBFX/8M3l2VbHR4XCqeYuz2Xxi7DWCk9sBJjjX4cLlcSLKNXYfa
      udI5S6rCi+1rekJ6NOgas1WiQbcruguks63RBaCzrdEFoLOt0QWgs63RBaCzrdEFoLOt0QWg
      s63RBaCzrdEFoLOt0QWgs63RBaCzrdEFoLOt0QWgs63RBaCzrdEFoLOt0QWgs63RBaCzrdEF
      oLOt0QWgs63RBaCzrfn/AZ0pwmnsnjnRAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
